<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE page SYSTEM "..\Data\PAWSSKHtmlMapper.dtd">
<?xml-stylesheet type="text/xsl" href="..\Templates\PAWSSKHtmlMapper.xsl"?>
<page id="CompFeatures" count="2/4">
	<title level="2">Complement Clauses - Examples and Features</title>
	<introduction>The various types of complement clauses <span id="CompFeatSpanNotPractical" show="swNotPractical">shown in the trees </span>represent the argument structure of the verb<span id="CompFeatIntroSpanNotPractical" show="swNotPractical"> as well as its syntactic subcategorization</span>.  Therefore, there is some degree of cross-linguistic similarity in the types of clausal complements the <span id="CompFeaturesIntroSpan2NotPractical" show="swNotPractical">verbs subcategorize for.</span><span id="CompFeaturesIntroSpan2Practical" show="swPractical">particular verbs select.</span>  In each case presented below, you may also be able to think of adjectives which take that type of complement when they are acting as the predicate of the sentence.
</introduction>
	<form section="comp">
		<EnglishExample>
			<exItem>First, consider verbs which take only a finite <span id="CompCPSpanNotPractical" show="swNotPractical">CP (or IP) complement</span><span id="CompCPSpanPractical" show="swPractical">complement clause with or without a complementizer</span>, like:</exItem>
			<exItem label="1.">I believe (that) Jill is my friend.</exItem>
			<exItem label="2.">Jill insists (that) she is my friend.</exItem>
			<exItem label="3.">I know (that) he likes me.</exItem>
		</EnglishExample>
		<prompt>Think of any similar examples from your language and key them here:</prompt>
		<textBox id="CompFiniteExample" dataItem="finiteExample" cols="50"/>
		<br/>
		<br/>
		<instruction id="CompMakeInstruction">In the lexicon, add the feature <feature>makeC</feature> to the complementizer(s) so it will show up in the correct position in the tree structure.  (For a word like English <example>that</example>, which can be both a complementizer <category>C</category> and a demonstrative <category>Dem</category>, you will need to have two separate lexical entries.)
<br/>
			<br/>
Add the features <feature>sentential embedded_finite</feature> to the lexical entries for the main verbs in the examples.  If one or more of your verbs require the complementizer to be present, also add the feature <feature>embedded_CP</feature> to those entries.</instruction>
		<br/>
		<EnglishExample>
			<exItem>Next, consider verbs which take either a finite <span id="CompCPorNonfiniteIPSpanNotPractical" show="swNotPractical">CP (or IP) complement or a nonfinite IP complement</span><span id="CompCPorNonfiniteIPSpanPractical" show="swPractical">complement clause with or without a complementizer or a nonfinite sentential complement</span>, like:</exItem>
			<exItem label="1.">I expect that Joe will come to the party.</exItem>
			<exItem label="2.">I expect Joe to come to the party.</exItem>
		</EnglishExample>
		<prompt>Think of any similar examples from your language and key them here:</prompt>
		<textBox id="CompFiniteOrNonfiniteExample" dataItem="finiteOrNonfiniteExample" cols="50"/>
		<br/>
		<br/>
		<instruction id="CompSententialEmbeddedInstruction">Add the features <feature>sentential embedded_-question</feature> to the lexical entries for the main verbs in the examples.</instruction>
		<br/>
		<EnglishExample>
			<exItem>Now consider verbs which take a direct object as well as either a finite or nonfinite complement, like:</exItem>
			<exItem label="1.">I will persuade Joe that he should come to the party.</exItem>
			<exItem label="2.">I will persuade Joe to come to the party.</exItem>
		</EnglishExample>
		<prompt>Think of any similar examples from your language and key them here:</prompt>
		<textBox id="CompDPCPExample" dataItem="DPCPExample" cols="50"/>
		<br/>
		<br/>
		<instruction id="CompSententialObjectInstruction">Add the feature <feature>sentential_with_object</feature> to the lexical entries for the main verbs in the examples.</instruction>
		<br/>
		<EnglishExample>
			<exItem>Some verbs only take a nonfinite <span id="CompNonfiniteIPSpanNotPractical" show="swNotPractical">IP</span><span id="CompNonfiniteIPSpanPractical" show="swPractical">sentential</span> complement, but the subject may be overt or dropped when it is coreferent with the main clause subject, as in:</exItem>
			<exItem label="1.">I want to come to the party.</exItem>
			<exItem label="2.">I want Joe to come to the party.</exItem>
		</EnglishExample>
		<prompt>Think of any similar examples from your language and key them here:</prompt>
		<textBox id="CompNonfiniteExample" dataItem="nonfiniteExample" cols="50"/>
		<br/>
		<br/>
		<instruction id="CompSententialNonFiniteInstruction">Add the features <feature>sentential embedded_-finite embedded_IP</feature> to the lexical entries for the main verbs in the examples.</instruction>
		<br/>
		<EnglishExample>
			<exItem>Some verbs only take a nonfinite <span id="CompNonfiniteIPCoreferentSpanNotPractical" show="swNotPractical">IP</span><span id="CompNonfiniteIPCoreferentSpanPractical" show="swPractical">sentential</span> complement and the subject must be coreferent with the main clause subject and dropped, as in:</exItem>
			<exItem label="1.">Joe tried to come to the party.</exItem>
			<exItem label="2.">I tried to think of more examples.</exItem>
		</EnglishExample>
		<prompt>Think of any similar examples from your language and key them here:</prompt>
		<textBox id="CompNonfiniteProDropExample" dataItem="nonfiniteProDropExample" cols="50"/>
		<br/>
		<br/>
		<instruction id="CompSententialProDropInstruction">Add the features <feature>sentential embedded_-finite embedded_pro-drop embedded_IP</feature> to the lexical entries for the main verbs in the examples.</instruction>
		<br/>
		<EnglishExample>
			<exItem>Some verbs only take a nonfinite complement, but the complementizer 'for' is present when the embedded subject is overt, as in:</exItem>
			<exItem label="1.">Joe would hate for Sue to be at the party.</exItem>
			<exItem label="2.">Joe hates to dance.</exItem>
			<exItem label="2.">I would like to be appreciated.</exItem>
		</EnglishExample>
		<prompt>Think of any similar examples from your language and key them here:</prompt>
		<textBox id="CompNonfiniteCPOrProDropExample" dataItem="nonfiniteCPOrProDropExample" cols="50"/>
		<br/>
		<br/>
		<instruction id="CompMakeCInstruction">In the lexicon, add the features <feature>makeC -finite</feature> to any complementizer(s) like 'for' so it will show up in the correct position in the tree structure and be restricted to nonfinite clauses.  (If your complementizer can also occur in finite clauses, do not add the feature <feature>-finite</feature>.  Also, remember that if the word is like English <example>for</example>, which can be used both as a complementizer <category>C</category> and as a preposition <category>P</category>, you will need to make two separate lexical entries.)
<br/>
			<br/>
		Add the features <feature>sentential embedded_-finite embedded_IPpro-dropOrCP</feature> to the lexical entries for the main verbs in the examples.</instruction>
		<br/>
		<prompt>
  Your language may also have other restrictions on embedded clauses, such as the embedded verb being in the subjunctive mood or in the perfective aspect.  Key any of those examples here:</prompt>
		<textBox id="CompOtherExample" dataItem="otherExample" cols="50"/>
		<br/>
		<br/>
		<instruction id="CompSententialInstruction">Add the feature <feature>sentential</feature> to the lexical entries for the main verbs in the examples.  Also add the feature <feature>embedded_subjunctive</feature> or <feature>embedded_perfective</feature> if appropriate for your language.  Other specific restrictions will need to be taken care of after completion of the starter kit.</instruction>
		<br/>
		<buttons>
			<button id="CompFeaturesBack" value="Back" goto="CompMain.xml"/>
			<button id="CompFeaturesNext" value="Next" goto="CompPosition.xml"/>
		</buttons>
	</form>
	<showWhen id="swNotPractical">
		<whenValue  element="paws" attr="outputGrammar" value="True"/>
	</showWhen>
	<showWhen id="swPractical">
		<whenValue  element="paws" attr="outputGrammar" value="False"/>
	</showWhen>
</page>
