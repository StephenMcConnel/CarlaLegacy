<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XML Spy v3.5 (http://www.xmlspy.com) by Andy Black (SIL International) -->
<!DOCTYPE page SYSTEM "..\Data\PAWSSKHtmlMapper.dtd">
<?xml-stylesheet type="text/xsl" href="..\Templates\PAWSSKHtmlMapper.xsl"?>
<page id="QPDegree" count="3/6">
	<title level="2">Quantifiers and QP - Degree Words</title>
	<introduction>Other quantifiers, like <example>many</example>, <example>much</example>, and <example>few</example>, come
in a different position in the nominal phrase.  In English,
this is after an article, demonstrative or possessor and
before an adjective and noun, as in <example>a few sad children</example> or <example>Sueâ€™s many black dogs</example>.  Further, these quantifiers can be modified by degree words
such as <example>very</example> and <example>so</example>, as in <example>very many dogs</example> or <example>so much
waste</example>.</introduction>
	<form section="qp">
	   <radioGroup id="QPQuantifierClassifierAgrTable" show="swOTClassifierAgr">
		  <groupName dataItem="quantifierClassifier" default="no">RQPQuantifierClassifierAgr</groupName>
		  <prompt>You said that your language has classifiers which mark concord agreement throughout the nominal phrases.  Do these quantifiers have classifiers attached to them?</prompt>
		  <radio id="QPQuantifierClassifierAgrNo" dataValue="no">No, these elements are not marked with classifiers</radio>
		  <radio id="QPQuantifierClassifierAgrYes" dataValue="yes">Yes, these elements are marked with classifiers as part of the concord agreement throughout the nominal phrase</radio>
	   </radioGroup>
	   <prompt id="QPQuantifierClassifierAgrPrompt" show="swOTClassifierAgrAndQuantifierYes">Since you have already detailed the forms of the classifiers, you only need to enter the roots for each of the quantifiers here.</prompt>
<br/>
	   <prompt>Key examples of this type of quantifier in your language here:</prompt>
		<textBox id="QPQuantifierExample" dataItem="quantifierExample"/>
		<br/>
		<br/>
		<radioGroup>
			<groupName dataItem="degree" default="yes">RDegreeYesNo</groupName>
			<prompt>Does your language have degree words which can modify this type of quantifier?</prompt>
			<radio id="QPDegreeNo" checked="yes" dataValue="no">No</radio>
			<radio id="QPDegreeYes" checked="yes" dataValue="yes">Yes</radio>
		</radioGroup>
<br/>
	   <radioGroup id="QPDegreeClassifierAgrTable" show="swOTClassifierAgrAndDegreeYes">
		  <groupName dataItem="degreeClassifier" default="no">RQPDegreeClassifierAgr</groupName>
		  <prompt>You said that your language has classifiers which mark concord agreement throughout the nominal phrases.  Do these degree words which modify the quantifiers have classifiers attached to them?</prompt>
		  <radio id="QPDegreeClassifierAgrNo" dataValue="no">No, these elements are not marked with classifiers</radio>
		  <radio id="QPDegreeClassifierAgrYes" dataValue="yes">Yes, these elements are marked with classifiers as part of the concord agreement throughout the nominal phrase</radio>
	   </radioGroup>
	   <prompt id="QPDegreeClassifierAgrPrompt" show="swOTClassifierAgrAndDegreeYesAndClassifierYes">Since you have already detailed the forms of the classifiers, you only need to enter the roots for each of the degree words here.</prompt>

	   <br/>
		<prompt id="QPDegreeWordYesExamples" show="swQPDegreeYes">Key examples of the degree words here.  Note that these degree words will most likely not be the
			same as the ones which can modify an entire nominal phrase dealt with in the first section above.</prompt>
		<textBox id="QPDegreeWordExample" dataItem="degreeWordExample" show="swQPDegreeYes"/>
		<prompt id="QPDegreeYesExamples" show="swQPDegreeYes">Now key examples of the degree words modifying a quantifier here:</prompt>
		<textBox id="QPDegreeExample" dataItem="degreeExample" show="swQPDegreeYes"/>
<br/><br/>
		<radioGroup id="QPDegreeWordsTable" show="swQPDegreeYes">
			<groupName dataItem="degreePos" default="unknown" position="yesSpec">RDegree</groupName>
			<prompt>Based on these examples, where do the degree words (optionally) occur with respect to the quantifier?</prompt>
			<radio id="QPDegreeBefore" checked="yes" dataValue="before">Before the quantifier</radio>
			<radio id="QPDegreeAfter" dataValue="after">After the quantifier</radio>
			<radio id="QPDegreeEitherSide" checked="yes" dataValue="either">On either side of the quantifier, but not on both sides at the same time</radio>
			<radio id="QPDegreeEitherOrBoth" checked="yes" dataValue="eitherOrBoth">On either side of the quantifier, or both sides at the same time</radio>
			<radio id="QPDegreeBeforeOrBoth" checked="yes" dataValue="beforeOrBoth">Before the quantifier, or on both sides at the same time</radio>
			<radio id="QPDegreeAfterOrBoth" checked="yes" dataValue="afterOrBoth">After the quantifier, or on both sides at the same time</radio>
			<radio id="QPDegreeBothSides" checked="yes" dataValue="both">Only on both sides at the same time</radio>
			<radioGroup id="QPDegreeEitherSideTable" show="swQPDegreeEitherorBoth">
				<groupName dataItem="degreeEither" default="unrestricted">RDegreeEitherSide</groupName>
				<prompt>Can all the degree words appear on either side of the quantifier?</prompt>
				<radio id="QPDegreeEitherUnrestricted" checked="yes" dataValue="unrestricted">Yes, there is no restriction</radio>
				<radio id="QPDegreeEitherRestricted" checked="yes" dataValue="restricted">No, there are separate sets for each side</radio>
			</radioGroup>
		</radioGroup>
		<instruction id="QPDegreeInstruction">In the lexicon, mark this type of quantifier
with the feature <feature>makeQ</feature>.  This will change
their category to <category>Q</category> for the syntax.  If a particular quantifier can
only go with plural nouns or if it marks plural itself (such as <example>many</example>), add the feature <feature>plural</feature> to that entry.  <br/>
			<span id="QPDegreeYesInstruction" show="swQPDegreeYes">
				<br/>Also, mark any words
which can modify them with the features <feature>makeDeg modifies_Q</feature>.   (If any of these degree words are the same as those which can modify an entire nominal phrase, you can simply add the additional feature <feature>modifies_Q</feature> to the same lexical entry.)</span>
			<span id="QPDegreeEitherNoInstruction" show="swQPDegreeEitherRestricted">Those which can only occur before the quantifier
also need to have the feature <feature>QP-initial</feature>
and those which can only occur after the quantifier also need the
feature <feature>QP-final</feature>.  Do not enter either
feature <feature>QP-initial</feature> or <feature>QP-final</feature> on any degree words which can occur on
either side.</span></instruction>
		<br/>
		<br/>
		<buttons>
			<button id="QPDegreeBack" value="Back" goto="QPDeterminers.xml"/>
			<button id="QPDegreeNext" value="Next" goto="QPCardinal.xml"/>
		</buttons>
	</form>
   <showWhen id="swOTClassifierAgr">
	  <whenValue element="typology" attr="classifier" value="yesAgr"/>
   </showWhen>
   <showWhen id="swOTClassifierAgrAndQuantifierYes">
	  <whenValue element="typology" attr="classifier" value="yesAgr"/>
	  <and/>
	  <whenRadio button="QPQuantifierClassifierAgrYes"/>
   </showWhen>
   <showWhen id="swQPDegreeYes">
		<whenRadio button="QPDegreeYes"/>
   </showWhen>
   <showWhen id="swOTClassifierAgrAndDegreeYes">
	  <whenValue element="typology" attr="classifier" value="yesAgr"/>
	  <and/>
	  <whenRadio button="QPDegreeYes"/>
   </showWhen>
   <showWhen id="swOTClassifierAgrAndDegreeYesAndClassifierYes">
	  <whenValue element="typology" attr="classifier" value="yesAgr"/>
	  <and/>
	  <whenRadio button="QPDegreeYes"/>
	  <and/>
	  <whenRadio button="QPDegreeClassifierAgrYes"/>
   </showWhen>
	<showWhen id="swQPDegreeEitherorBoth">
		<whenRadio button="QPDegreeYes"/>
		<and/>
		<not/>
		<whenRadio button="QPDegreeBefore"/>
		<and/>
		<not/>
		<whenRadio button="QPDegreeAfter"/>
	</showWhen>
	<showWhen id="swQPDegreeEitherRestricted">
		<whenRadio button="QPDegreeYes"/>
		<and/>
		<whenRadio button="QPDegreeEitherRestricted"/>
		<and/>
		<not/>
		<whenRadio button="QPDegreeBefore"/>
		<and/>
		<not/>
		<whenRadio button="QPDegreeAfter"/>
	</showWhen>
</page>
