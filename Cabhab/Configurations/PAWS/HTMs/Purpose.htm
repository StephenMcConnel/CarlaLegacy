<html>
   <head>
	  <title>Purpose Statement for PAWS</title>
	  <link rel="stylesheet" href="../styles/PAWSStarterKitMaster.css">
<script language="jscript">

  function Initialize()
{
window.external.SetLeftOffAt("Purpose.htm");
}
</script>
   </head>
   <body onload="Initialize()">
<h1>Purpose Statement for PAWS</h1>
<div class="introduction">

<p>As the name of the starter kit indicates, the Parser and Writer for Syntax (PAWS) has two purposes and two outputs:</p>
<ul>
<li>The Writer produces a rough draft of a grammar of the syntax of your language, based on the answers to the questions in each section of PAWS.  This output file is in XLingPap xml format. (The documentation for <a href="../Help/XLingPapUserDoc.htm" target="_blank">XLingPap</a> is included in the Resources section of the Help menu item and a link to a nice editor called XMLMiind is included at the end of PAWS.) </li>

<li>The Parser produces all the files needed for using the PC-PATR syntactic parser (<a href="../Help/pcpatr.htm" target="_blank">McConnel 2002</a>, included in the Resources section of the Help menu item) for parsing and disambiguation within CARLA Studio. </li>
</ul>

<p>Those who wish to use the Writer only may disregard the instructions in red in each section, since these relate to annotating your lexicon with the features needed for parsing.  Once all the sections are completed, the writer output file may be edited and polished.  (If your interest is solely in the Writer, you may return to the Contents page now. <A href="Contents.htm">Return to Contents</A>
)  Those who wish to do parsing will also get the grammar writeup as a bonus.</p>

<p>The purpose of the Parser is to aid the user in setting up the initial phrase structure rules, lexical entries, feature templates, and constraints needed for using PC-Patr .  Those characteristics of the language which are general, usually about 3/4 of the rules, can be modeled via this starter kit. The language-specific rules will need to be added later using the interface tools to be provided for user support and/or with consultant help.</p>

<p>Setting up a complete syntactic parser for a language is a
monumental task.  Experimentation was therefore done to determine how
much was necessary to achieve adequate coverage of the language for
the parser to be able to disambiguate AMPLE output within CARLA
Studio.  On the sliding scale between the simplest and most complex,
this parser is about the middle.  Specifically, it is simpler in some
ways and more complex in others than the analysis put forth in
Bickford's (1998) text <i>Tools for Analyzing the World's Languages:
Morphology and Syntax</i> (which is used in many SIL Grammar I
courses).  The major differences are:</p>
<ul>
 <li>Only very limited, partial subcategorization is used, since this is the point which
requires the most time and complexity in a complete parser.</li>


<li>An articulated phrase structure following X-bar
  theory is used (see <a href="../Help/CBGBTEXT.DOC" target="_blank">Black 1999</a>, included in the Resources section of the Help menu item, for an
  introduction), since flat structures with lots of optionality are much harder
  to properly constrain and require more memory and processing time. </li>


<li>A parser necessarily works on the surface structure, so
the phrase structure rules must model the output of
transformations, not the underlying structure.  This parser
does not include traces or other null elements which would
be necessary in a complete parser (see <a href="../Help/Black1997.htm" target="_blank">Black 1997</a> for an
example; it is included in the Resources section of the Help menu item).</li>
</ul>

<p>This starter kit is designed in sections, working from the smaller
phrases which may be included in other phrases up to the more complex
phrases and clauses. This allows the user to work on one section at a
time, test hypotheses for each type of phrase and at the same time
become familiar with using PC-PATR for disambiguation within CARLA
Studio.  The entire starter kit must be completed before attempting to
parse regular texts, however.</p>


</div>
<div align="center">
  <A href="Contents.htm">Return to Contents</A>
</div>
   </body>
</html>
