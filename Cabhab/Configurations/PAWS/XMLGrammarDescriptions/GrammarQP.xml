<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE masterGrammar SYSTEM "..\Data\MasterGrammar.dtd">
<masterGrammar>
	<rule>
rule {QP option 0 - no modifiers}
QP = Q
	&lt;QP head&gt; = &lt;Q head&gt;
	&lt;QP option&gt; = 0
</rule>
	<rule show="QPoption1">
rule {QP option 1 - modifiers initial}
QP = Deg Q
	&lt;QP head&gt; = &lt;Q head&gt;
	&lt;Deg head type modifies_Q&gt; = +
	&lt;Deg head type QP-initial&gt; = +
	&lt;QP head type prefix&gt; &lt;= &lt;Deg head type prefix&gt;
	&lt;QP option&gt; = 1
</rule>
	<showWhen id="QPoption1">
		<whenValue element="qp" attr="degree" value="yes"/>
		<and/>
		<whenValue element="qp" attr="degreePos" value="before"/>
		<or/>
		<whenValue element="qp" attr="degree" value="yes"/>
		<and/>
		<whenValue element="qp" attr="degreePos" value="either"/>
		<or/>
		<whenValue element="qp" attr="degree" value="yes"/>
		<and/>
		<whenValue element="qp" attr="degreePos" value="eitherOrBoth"/>
		<or/>
		<whenValue element="qp" attr="degree" value="yes"/>
		<and/>
		<whenValue element="qp" attr="degreePos" value="beforeOrBoth"/>
	</showWhen>
	<rule show="QPoption2">
rule {QP option 2 - modifiers final}
QP = Q Deg
	&lt;QP head&gt; = &lt;Q head&gt;
	&lt;Deg head type modifies_Q&gt; = +
	&lt;Deg head type QP-final&gt;   = +
	&lt;QP head type suffix&gt; &lt;= &lt;Deg head type suffix&gt;
	&lt;QP option&gt; = 2
</rule>
	<showWhen id="QPoption2">
		<whenValue element="qp" attr="degree" value="yes"/>
		<and/>
		<whenValue element="qp" attr="degreePos" value="after"/>
		<or/>
		<whenValue element="qp" attr="degree" value="yes"/>
		<and/>
		<whenValue element="qp" attr="degreePos" value="either"/>
		<or/>
		<whenValue element="qp" attr="degree" value="yes"/>
		<and/>
		<whenValue element="qp" attr="degreePos" value="eitherOrBoth"/>
		<or/>
		<whenValue element="qp" attr="degree" value="yes"/>
		<and/>
		<whenValue element="qp" attr="degreePos" value="afterOrBoth"/>
	</showWhen>
	<rule show="QPoption3">
rule {QP option 3 - modifiers both sides}
QP = Deg_1 Q Deg_2
	&lt;QP head&gt; = &lt;Q head&gt;
	&lt;Deg_1 head type modifies_Q&gt; = +
	&lt;Deg_2 head type modifies_Q&gt; = +
	&lt;Deg_1 head type QP-initial&gt; = +
	&lt;Deg_2 head type QP-final&gt;   = +
	&lt;QP head type prefix&gt; &lt;= &lt;Deg_1 head type prefix&gt;
	&lt;QP head type suffix&gt; &lt;= &lt;Deg_2 head type suffix&gt;
</rule>
	<showWhen id="QPoption3">
		<whenValue element="qp" attr="degree" value="yes"/>
		<and/>
		<whenValue element="qp" attr="degreePos" value="both"/>
		<or/>
		<whenValue element="qp" attr="degree" value="yes"/>
		<and/>
		<whenValue element="qp" attr="degreePos" value="beforeOrBoth"/>
		<or/>
		<whenValue element="qp" attr="degree" value="yes"/>
		<and/>
		<whenValue element="qp" attr="degreePos" value="eitherOrBoth"/>
		<or/>
		<whenValue element="qp" attr="degree" value="yes"/>
		<and/>
		<whenValue element="qp" attr="degreePos" value="afterOrBoth"/>
	</showWhen>
	<rule show="QPoptionNum0i">
rule {QP option Num0i - no modifiers, head initial}
QP = Num (Conj) (Num_1 (Conj_1) (Num_2 (Conj_2) (Num_3 (Conj_3) (Num_4 (Conj_4) (Num_5)))))
	&lt;QP head&gt; = &lt;Num head&gt;
	&lt;Num head type quantifier&gt; = +
	&lt;Conj head type conjoins_DP&gt; = +
	&lt;Conj_1 head type conjoins_DP&gt; = +
	&lt;Conj_2 head type conjoins_DP&gt; = +
	&lt;Conj_3 head type conjoins_DP&gt; = +
	&lt;Conj_4 head type conjoins_DP&gt; = +
	&lt;QP option&gt; = Num0i
</rule>
	<showWhen id="QPoptionNum0i">
		<whenValue element="qp" attr="cardinalHead" value="before"/>
	</showWhen>
	<rule show="QPoptionNum0f">
rule {QP option Num0f - no modifiers, head final}
QP = (((((Num_5) (Conj_4) Num_4) (Conj_3) Num_3) (Conj_2) Num_2) (Conj_1) Num_1) (Conj) Num
	&lt;QP head&gt; = &lt;Num head&gt;
	&lt;Num head type quantifier&gt; = +
	&lt;Conj head type conjoins_DP&gt; = +
	&lt;Conj_1 head type conjoins_DP&gt; = +
	&lt;Conj_2 head type conjoins_DP&gt; = +
	&lt;Conj_3 head type conjoins_DP&gt; = +
	&lt;Conj_4 head type conjoins_DP&gt; = +
	&lt;QP option&gt; = Num0f
</rule>
	<showWhen id="QPoptionNum0f">
		<whenValue element="qp" attr="cardinalHead" value="after"/>
	</showWhen>
	<rule show="QPoptionNum1i">
rule {QP option Num1i - modifiers initial, head initial}
QP = Adj Num (Conj) (Num_1 (Conj_1) (Num_2 (Conj_2) (Num_3 (Conj_3) (Num_4 (Conj_4) (Num_5)))))
	&lt;QP head&gt; = &lt;Num head&gt;
	&lt;Num head type quantifier&gt; = +
	&lt;Adj head type ordinal&gt; = +
	&lt;Adj head type QP-initial&gt; = +
	&lt;Conj head type conjoins_DP&gt; = +
	&lt;Conj_1 head type conjoins_DP&gt; = +
	&lt;Conj_2 head type conjoins_DP&gt; = +
	&lt;Conj_3 head type conjoins_DP&gt; = +
	&lt;Conj_4 head type conjoins_DP&gt; = +
	&lt;QP option&gt; = Num1i
</rule>
	<showWhen id="QPoptionNum1i">
		<whenValue element="qp" attr="cardinalHead" value="before"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="before"/>
		<or/>
		<whenValue element="qp" attr="cardinalHead" value="before"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="beforeOrBoth"/>
		<or/>
		<whenValue element="qp" attr="cardinalHead" value="before"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="either"/>
		<or/>
		<whenValue element="qp" attr="cardinalHead" value="before"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="eitherOrBoth"/>
	</showWhen>
	<rule show="QPoptionNum1f">
rule {QP option Num1f - modifiers initial, head final}
QP = Adj (((((Num_5) (Conj_4) Num_4) (Conj_3) Num_3) (Conj_2) Num_2) (Conj_1) Num_1) (Conj) Num
	&lt;QP head&gt; = &lt;Num head&gt;
	&lt;Num head type quantifier&gt; = +
	&lt;Adj head type ordinal&gt; = +
	&lt;Adj head type QP-initial&gt; = +
	&lt;Conj head type conjoins_DP&gt; = +
	&lt;Conj_1 head type conjoins_DP&gt; = +
	&lt;Conj_2 head type conjoins_DP&gt; = +
	&lt;Conj_3 head type conjoins_DP&gt; = +
	&lt;Conj_4 head type conjoins_DP&gt; = +
	&lt;QP option&gt; = Num1f
</rule>
	<showWhen id="QPoptionNum1f">
		<whenValue element="qp" attr="cardinalHead" value="after"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="before"/>
		<or/>
		<whenValue element="qp" attr="cardinalHead" value="after"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="beforeOrBoth"/>
		<or/>
		<whenValue element="qp" attr="cardinalHead" value="after"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="either"/>
		<or/>
		<whenValue element="qp" attr="cardinalHead" value="after"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="eitherOrBoth"/>
	</showWhen>
	<rule show="QPoptionNum2i">
rule {QP option Num2i - modifiers final, head initial}
QP = Num (Conj) (Num_1 (Conj_1) (Num_2 (Conj_2) (Num_3 (Conj_3) (Num_4 (Conj_4) (Num_5))))) Adj
	&lt;QP head&gt; = &lt;Num head&gt;
	&lt;Num head type quantifier&gt; = +
	&lt;Adj head type ordinal&gt; = +
	&lt;Adj head type QP-final&gt; = +
	&lt;Conj head type conjoins_DP&gt; = +
	&lt;Conj_1 head type conjoins_DP&gt; = +
	&lt;Conj_2 head type conjoins_DP&gt; = +
	&lt;Conj_3 head type conjoins_DP&gt; = +
	&lt;Conj_4 head type conjoins_DP&gt; = +
	&lt;QP option&gt; = Num2i
</rule>
	<showWhen id="QPoptionNum2i">
		<whenValue element="qp" attr="cardinalHead" value="before"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="after"/>
		<or/>
		<whenValue element="qp" attr="cardinalHead" value="before"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="afterOrBoth"/>
		<or/>
		<whenValue element="qp" attr="cardinalHead" value="before"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="either"/>
		<or/>
		<whenValue element="qp" attr="cardinalHead" value="before"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="eitherOrBoth"/>
	</showWhen>
	<rule show="QPoptionNum2f">
rule {QP option Num2f - modifiers final, head final}
QP = (((((Num_5) (Conj_4) Num_4) (Conj_3) Num_3) (Conj_2) Num_2) (Conj_1) Num_1) (Conj) Num Adj
	&lt;QP head&gt; = &lt;Num head&gt;
	&lt;Num head type quantifier&gt; = +
	&lt;Adj head type ordinal&gt; = +
	&lt;Adj head type QP-final&gt; = +
	&lt;Conj head type conjoins_DP&gt; = +
	&lt;Conj_1 head type conjoins_DP&gt; = +
	&lt;Conj_2 head type conjoins_DP&gt; = +
	&lt;Conj_3 head type conjoins_DP&gt; = +
	&lt;Conj_4 head type conjoins_DP&gt; = +
	&lt;QP option&gt; = Num2f
</rule>
	<showWhen id="QPoptionNum2f">
		<whenValue element="qp" attr="cardinalHead" value="after"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="after"/>
		<or/>
		<whenValue element="qp" attr="cardinalHead" value="after"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="afterOrBoth"/>
		<or/>
		<whenValue element="qp" attr="cardinalHead" value="after"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="either"/>
		<or/>
		<whenValue element="qp" attr="cardinalHead" value="after"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="eitherOrBoth"/>
	</showWhen>
	<rule show="QPoptionNum3i">
rule {QP option Num3i - modifiers both sides, head initial}
QP = Adj Num (Conj) (Num_1 (Conj_1) (Num_2 (Conj_2) (Num_3 (Conj_3) (Num_4 (Conj_4) (Num_5))))) Adj_1
	&lt;QP head&gt; = &lt;Num head&gt;
	&lt;Num head type quantifier&gt; = +
	&lt;Adj head type ordinal&gt; = +
	&lt;Adj_1 head type ordinal&gt; = +
	&lt;Adj head type QP-initial&gt; = +
	&lt;Adj_1 head type QP-final&gt; = +
	&lt;Conj head type conjoins_DP&gt; = +
	&lt;Conj_1 head type conjoins_DP&gt; = +
	&lt;Conj_2 head type conjoins_DP&gt; = +
	&lt;Conj_3 head type conjoins_DP&gt; = +
	&lt;Conj_4 head type conjoins_DP&gt; = +
	&lt;QP option&gt; = Num3i
</rule>
	<showWhen id="QPoptionNum3i">
		<whenValue element="qp" attr="cardinalHead" value="before"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="both"/>
		<or/>
		<whenValue element="qp" attr="cardinalHead" value="before"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="afterOrBoth"/>
		<or/>
		<whenValue element="qp" attr="cardinalHead" value="before"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="beforeOrBoth"/>
		<or/>
		<whenValue element="qp" attr="cardinalHead" value="before"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="eitherOrBoth"/>
	</showWhen>
	<rule show="QPoptionNum3f">
rule {QP option Num3f - modifiers both sides, head final}
QP = Adj (((((Num_5) (Conj_4) Num_4) (Conj_3) Num_3) (Conj_2) Num_2) (Conj_1) Num_1) (Conj) Num Adj_1
	&lt;QP head&gt; = &lt;Num head&gt;
	&lt;Num head type quantifier&gt; = +
	&lt;Adj head type ordinal&gt; = +
	&lt;Adj_1 head type ordinal&gt; = +
	&lt;Adj head type QP-initial&gt; = +
	&lt;Adj_1 head type QP-final&gt; = +
	&lt;Conj head type conjoins_DP&gt; = +
	&lt;Conj_1 head type conjoins_DP&gt; = +
	&lt;Conj_2 head type conjoins_DP&gt; = +
	&lt;Conj_3 head type conjoins_DP&gt; = +
	&lt;Conj_4 head type conjoins_DP&gt; = +
	&lt;QP option&gt; = Num3f
</rule>
	<showWhen id="QPoptionNum3f">
		<whenValue element="qp" attr="cardinalHead" value="after"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="both"/>
		<or/>
		<whenValue element="qp" attr="cardinalHead" value="after"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="afterOrBoth"/>
		<or/>
		<whenValue element="qp" attr="cardinalHead" value="after"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="beforeOrBoth"/>
		<or/>
		<whenValue element="qp" attr="cardinalHead" value="after"/>
		<and/>
		<whenValue element="qp" attr="ordinalPos" value="eitherOrBoth"/>
	</showWhen>
</masterGrammar>
