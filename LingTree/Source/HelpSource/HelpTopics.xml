<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XML Spy v4.3 U (http://www.xmlspy.com) by Andy Black (SIL International) -->
<!DOCTYPE lingPaper SYSTEM "C:\Program Files\XLingPap\XLingPap.dtd">
<?xml-stylesheet type="text/xsl" href="C:\Program Files\XLingPap\XLingPap1.xsl"?>
<lingPaper css="LingTree.css">
  <language id="l1">Example</language>
  <language id="l2">Regular</language>
  <frontMatter>
	<title>LingTree Help Topics</title>
	<author>H. Andrew Black</author>
	<affiliation>SIL International</affiliation>
	<date>7-October-2005</date>
	<version>0.7.0</version>
	<contents/>
  </frontMatter>
  <section1 id="s0">
	<secTitle>Introduction</secTitle>
	<p>LingTree is a tool to produce linguistic tree diagrams.  The user keys in a description of the tree, processes that description, and LingTree shows what the tree looks like.  The tree can be saved in a number of different file formats so that it can be included in papers or web pages.</p>
	<p>LingTree looks like what is shown in <exampleRef num="x0.1"/>.</p>
	<example num="x0.1">
	  <word>
		<langData lang="l1">
		  <img src="LingTree.png"/>
		</langData>
	  </word>
	</example>
	<p>One keys the description in the top pane, processes the description, and then the tree appears in the bottom pane.  See section <sectionRef sec="s1"/> for information on keying a tree description and processing a tree.</p>
	<p>You can drag the edges of the window to make it larger.  You can also drag the bar between the panes to make either the tree display or the description larger (or smaller).</p>
  </section1>
  <section1 id="s1">
	<secTitle>Editing a Tree Description</secTitle>
	<p>You key in a tree description in the top pane.  To show the corresponding tree in the bottom pane, you "process" the description in any one of three ways:</p>
	<ul>
	  <li>by clicking the "process the tree description button" (<img src="ProcessDescription.png"/>)</li>
	  <li>by clicking on the <object class="MenuItem">Tree</object> menu item and then <object class="MenuItem">Process Description</object>
	  </li>
	  <li>or by typing CTRL-D (holding the CTRL key down while pressing the D key).</li>
	</ul>
	<p>All three do the same processing and are equivalent in effect.</p>
	<section2 id="s1.1">
	  <secTitle>Basic Tree Description</secTitle>
	  <p>
	A tree description consists of a set of nodes enclosed within parentheses.  The parentheses may be nested according to the tree structure.  Whenever you key a closing parenthesis ')', the matching opening parenthesis will be selected briefly.  This is to help you match nested opening and closing parentheses.
</p>
	  <p>Here are two examples of how to key trees.</p>
	  <p>When you key what is in <exampleRef num="x1.1.1"/>, it shows up as in <exampleRef num="x1.1.2"/>.</p>
	  <example num="x1.1.1">
		<word>
		  <langData lang="l1">(S (NP) (VP))</langData>
		</word>
	  </example>
	  <example num="x1.1.2">
		<word>
		  <langData lang="l1">
			<img src="sNpVp.png"/>
		  </langData>
		</word>
	  </example>
	  <p>
And if you key what is in <exampleRef num="x1.1.3"/>
	  </p>
	  <example num="x1.1.3">
		<word>
		  <langData lang="l1">(S (NP (Lee)) (VP (V (gets)) (NP (Det (the)) (N (idea)))))
</langData>
		</word>
	  </example>
	  <p>it will produce what is in <exampleRef num="x1.1.4"/>
	  </p>
	  <example num="x1.1.4">
		<word>
		  <langData lang="l1">
			<img src="LeeGetsTheIdea.png"/>
		  </langData>
		</word>
	  </example>
	  <p>
You may set the fonts for the nodes.  See section <sectionRef sec="s2"/>, especially <sectionRef sec="s2.3"/>.</p>
	</section2>
	<section2 id="s1.2">
	  <secTitle>Handling Parentheses</secTitle>
	  <p>If you need to put an opening or closing parenthesis in your tree,  quote the parenthesis by using a backslash immediately before it.  For example,  if you key what is in <exampleRef num="x1.2.1"/>
	  </p>
	  <example num="x1.2.1">
		<word>
		  <langData lang="l1">(NP (Paul \(the bear\)))
</langData>
		</word>
	  </example>
	  <p>it
will come out as in </p>
	  <example num="x1.2.2">
		<word>
		  <langData lang="l1">
			<img src="Paul(TheBear).png"/>
		  </langData>
		</word>
	  </example>
	  <p>If you do not quote the parentheses with a backslash, then it will look like what is in <exampleRef num="x1.2.3"/>.</p>
	  <example num="x1.2.3">
		<word>
		  <langData lang="l1">
			<img src="PaulTheBear.png"/>
		  </langData>
		</word>
	  </example>
	</section2>
	<section2 id="s1.3">
	  <secTitle>Indicating a Lexical Item</secTitle>
	  <p>To mark a node in the tree as a lexical item, key <object class="SynTagmeme">\L</object> before it (i.e. right after the opening parenthesis).  Note that it is important to include a space between the <object class="SynTagmeme">\L</object> and the lexical item that follows it.  For example, suppose we have set the parameters so that lexical items come out in red (see section <sectionRef sec="s2"/>, especially <sectionRef sec="s2.3"/>).  Then keying what is in <exampleRef num="x1.3.1"/>
	  </p>
	  <example num="x1.3.1">
		<word>
		  <langData lang="l1">(S (NP (\L <object class="Red">John</object>)) (VP (V (\L <object class="Red">sleeps</object>))))</langData>
		</word>
	  </example>
	  <p>will produce what is in <exampleRef num="x1.3.2"/>.</p>
	  <example num="x1.3.2">
		<word>
		  <langData lang="l1">
			<img src="JohnSleepsRed.png"/>
		  </langData>
		</word>
	  </example>
	  <p>Also, notice that in the description, the lexical items are also shown in red.</p>
	  <p>If you do not key the <object class="SynTagmeme">\L</object>, then it will look like what is in <exampleRef num="x1.3.3"/>.</p>
	  <example num="x1.3.3">
		<word>
		  <langData lang="l1">
			<img src="JohnSleeps.png"/>
		  </langData>
		</word>
	  </example>
	</section2>
	<section2 id="s1.4">
	  <secTitle>Indicating a Gloss Item</secTitle>
	  <p>To mark a node in the tree as a gloss item, key <object class="SynTagmeme">\G</object> before it (i.e. right after the opening parenthesis).    Note that it is important to include a space between the <object class="SynTagmeme">\G</object> and the gloss item that follows it.  If one is going to mark glosses, one should also mark lexical items.  For example, suppose we have set the parameters so that lexical items come out in red and gloss items come out in blue (see section <sectionRef sec="s2"/>, especially <sectionRef sec="s2.3"/>).  Then keying what is in <exampleRef num="x1.4.1"/>
	  </p>
	  <example num="x1.4.1">
		<word>
		  <langData lang="l1">(S (NP (\L <object class="Red">Juan</object> (\G <object class="Blue">John</object>))) (VP (V (\L <object class="Red">duerme</object> (\G <object class="Blue">sleeps</object>)))))
	</langData>
		</word>
	  </example>
	  <p>produces what is in <exampleRef num="x1.4.2"/>.</p>
	  <example num="x1.4.2">
		<word>
		  <langData lang="l1">
			<img src="JuanDuermeRedBlue.png"/>
		  </langData>
		</word>
	  </example>
	  <p>Notice that there are no lines between the lexical items and their respective glosses and that the glosses are relatively close to the lexical item.  In addition the colors also show up in the description box.</p>
	  <p>If you do not key the <object class="SynTagmeme">\G</object> , then it would look like what is in <exampleRef num="x1.4.3"/>.</p>
	  <example num="x1.4.3">
		<word>
		  <langData lang="l1">
			<img src="JuanDuerme.png"/>
		  </langData>
		</word>
	  </example>
	  <p>Notice that there is greater space between the lexical items and their glosses.  The blue color also does not show for the gloss items.</p>
	</section2>
	<section2 id="s1.5">
	  <secTitle>Indicating a Triangle (a phrase)</secTitle>
	  <p>To mark a node as a phrase by using a triangle above it, key <object class="SynTagmeme">\T</object> before it (i.e. right after the opening parenthesis).    Note that it is important to include a space between the <object class="SynTagmeme">\T</object> and whatever follows it.  For example, keying what is in <exampleRef num="x1.5.1"/>
	  </p>
	  <example num="x1.5.1">
		<word>
		  <langData lang="l1">(NP (\T all the King’s men))</langData>
		</word>
	  </example>
	  <p>will produce what is in <exampleRef num="x1.5.2"/>.</p>
	  <example num="x1.5.2">
		<word>
		  <langData lang="l1">
			<img src="AllTheKingsMenTriangle.png"/>
		  </langData>
		</word>
	  </example>
	  <p>If you do not key the <object class="SynTagmeme">\T</object>, then it will look like what is in <exampleRef num="x1.5.3"/>.</p>
	  <example num="x1.5.3">
		<word>
		  <langData lang="l1">
			<img src="AllTheKingsMen.png"/>
		  </langData>
		</word>
	  </example>
	  <p>You may key both a triangle and either a lexical item or a gloss for a given node.  The order in which you key the <object class="SynTagmeme">\T</object> and either the <object class="SynTagmeme">\L</object> or the <object class="SynTagmeme">\G</object> does not matter.  Either order will work.  You just need to be sure to include a space after each one.</p>
	  <p>Note that if you use the &ldquo;Flat&rdquo; option (see section <sectionRef sec="s2.4"/>) while using triangles, you will need to also use either the <object class="SynTagmeme">\L</object> or the <object class="SynTagmeme">\G</object> at the same time.  Otherwise, the triangle node may not be at the same level as other &ldquo;flattened&rdquo; nodes.</p>
	</section2>
	<section2 id="s1.6">
	  <secTitle>Omitting a Line</secTitle>
	  <p>To not have a line show above a node, key <object class="SynTagmeme">\O</object> before it (i.e. right after the opening parenthesis).    Note that it is important to include a space between the <object class="SynTagmeme">\O</object> and whatever follows it.  For example, keying what is in <exampleRef num="x1.6.1"/>
	  </p>
	  <example num="x1.6.1">
		<word>
		  <langData lang="l1">((\O σ (O (\L t)) (N (R (\L e)))) (\O σ (O (\L p)) (N (R (\L i)) (C (\L k)))))</langData>
		</word>
	  </example>
	  <p>will produce what is in <exampleRef num="x1.6.2"/> (assuming that the "flat" structure parameter is also chosen; see <sectionRef sec="s2.4"/>).</p>
	  <example num="x1.6.2">
		<word>
		  <langData lang="l1">
			<img src="TepikSyllable.png"/>
		  </langData>
		</word>
	  </example>
	  <p>If you do not key the <object class="SynTagmeme">\O</object>s, then it will look like what is in <exampleRef num="x1.6.3"/>.</p>
	  <example num="x1.6.3">
		<word>
		  <langData lang="l1">
			<img src="TepikSyllableLines.png"/>
		  </langData>
		</word>
	  </example>
	  <p>You may combine the omit lines command with either a lexical item or a gloss for a given node.  The order in which you key the <object class="SynTagmeme">\O</object> and either the <object class="SynTagmeme">\L</object> or the <object class="SynTagmeme">\G</object> does not matter.  Either order will work.  You just need to be sure to include a space after each one.</p>
	</section2>
	<section2 id="s1.7">
	  <secTitle>Indicating Subscripts or Superscripts</secTitle>
	  <p>One can include simple subscripts and superscripts within a tree node.</p>
	  <section3 id="s1.7.1">
		<secTitle>Subscript</secTitle>
	  <p>To have a subscript show up at the end of some text, key <object class="SynTagmeme">/s</object> before the subscript text.  Note that this has a forward slash, not a backslash.  It also uses a lowercase <object class="SynTagmeme">s</object>, not uppercase (uppercase is used for a superscript).  One does not have to include a space between the <object class="SynTagmeme">/s</object> and whatever follows it.  For example, keying what is in <exampleRef num="x1.7.1.1"/>
	  </p>
	  <example num="x1.7.1.1">
		<word>
		  <langData lang="l1">(S (NP/s1 (N (dogs))) (VP (V (chase)) (NP/s2 (N (cats)))))</langData>
		</word>
	  </example>
	  <p>will produce what is in <exampleRef num="x1.7.1.2"/>.</p>
	  <example num="x1.7.1.2">
		<word>
		  <langData lang="l1">
			<img src="SubscriptExample.png"/>
		  </langData>
		</word>
	  </example>
	  <p>If you do not key the <object class="SynTagmeme">/s</object>, then it will look like what is in <exampleRef num="x1.7.1.3"/>.</p>
	  <example num="x1.7.1.3">
		<word>
		  <langData lang="l1">
			<img src="SubscriptExampleNo.png"/>
		  </langData>
		</word>
	  </example>
	  </section3>
	  <section3 id="s1.7.2">
		<secTitle>Superscript</secTitle>

	  <p>To have a superscript show up at the end of some text, key <object class="SynTagmeme">/S</object> before the superscript text.  Note that this has a forward slash, not a backslash.  It also uses a uppercase <object class="SynTagmeme">S</object>, not lowercase (lowercase is used for a subscript).  One does not have to include a space between the <object class="SynTagmeme">/S</object> and whatever follows it.  For example, keying what is in <exampleRef num="x1.7.2.1"/>
	  </p>
	  <example num="x1.7.2.1">
		<word>
		  <langData lang="l1">(IP (DP) (I/S'))</langData>
		</word>
	  </example>
	  <p>will produce what is in <exampleRef num="x1.7.2.2"/>.</p>
	  <example num="x1.7.2.2">
		<word>
		  <langData lang="l1">
			<img src="SuperscriptExample.png"/>
		  </langData>
		</word>
	  </example>
	  <p>If you do not key the <object class="SynTagmeme">/S</object>, then it will look like what is in <exampleRef num="x1.7.2.3"/>.</p>
	  <example num="x1.7.2.3">
		<word>
		  <langData lang="l1">
			<img src="SuperscriptExampleNo.png"/>
		  </langData>
		</word>
	  </example>
	  </section3>
	  <section3 id="s1.7.3">
		<secTitle>Combining Subscripts and Superscripts does not Work</secTitle>
	  <p>Currently, you may not combine both subscripts and superscripts.  Once either a subscript or a superscript is indicated, the rest of the text of the node will be treated as either a subscript or a superscript.</p>
	  </section3>
	</section2>
  </section1>
  <section1 id="s2">
	<secTitle>Modifying the Tree Parameters</secTitle>
	<p>One can adjust the positioning of the tree and its nodes as well as choose the fonts, sizes, and colors for the non-terminal, lexical item, and gloss nodes.  One can also set a background color and determine the color and thickness of the lines in the trees.  In addition, one can have the tree show all of its lexical and gloss items at the same vertical position.</p>
	<p>To set any of these parameters, invoke the <object class="DialogTitle">Tree Parameters</object> dialog box (Click on the <object class="MenuItem">Tree</object> menu item and then click on <object class="MenuItem">Parameters...</object>).  The dialog box looks like what is shown in <exampleRef num="x2.1"/>
	</p>
	<example num="x2.1">
	  <word>
		<langData lang="l1">
		  <img src="TreeParameters.png"/>
		</langData>
	  </word>
	</example>
	<section2 id="s2.2">
	  <secTitle>Setting the (X, Y) Parameters</secTitle>
	  <p>The (X,Y) Parameters section allows you to determine the initial upper-left position of the tree (<object class="MenuItem">Leftmost X-coordinate</object> and <object class="MenuItem">Topmost Y-coordinate</object>) and to set the gap between the nodes (<object class="MenuItem">Horizontal gap between terminal nodes</object> and <object class="MenuItem">Vertical gap between nodes</object>).  The units are in 0.01 millimeters.  The <object class="MenuItem">Gap adjustment between Lex and Gloss</object> allows you to fine-tune the vertical gap between lexical and gloss items.  You can use negative numbers for any of these values (but you may not always like the results).</p>
	</section2>
	<section2 id="s2.3">
	  <secTitle>Setting the Font Information</secTitle>
	  <p>The fonts section allows you to change the font, face, size, and color for the non-terminal, lexical item and gloss nodes.  Click on the appropriate button.  You can also set the color of the background, the color of the lines, and the thickness of the lines.  On the latter, there is a minimum size; if what you set is too small, the minimum will still be used.  You need to set it to at least 40 before you will notice any difference.</p>
	  <section3 id="s2.3.1">
		<secTitle>Try to Smooth Slanted Lines</secTitle>
		<p>If you check the &ldquo;Try to smooth slanted lines&rdquo; checkbox, it will attempt to smooth out some of the jaggedness in the slanted lines.  For example, without this box checked,  <exampleRef num="x2.3.1.a"/> would appear as in <exampleRef num="x2.3.1.b"/>.</p>
		<example num="x2.3.1.a">
		  <word>
			<langData lang="l1">(IP (NP (Det (\L n (\G the))) (N' (N (\L Juan (\G John)))))
	(I' (I0)
		(VP (V' (V (\L kita (\G sees)))
				(NP (Det (\L n (\G the))) (N' (N (\L koatl (\G snake)))))))))</langData>
		  </word>
		</example>
		<example num="x2.3.1.b">
		  <chart>
			<img src="NJuanKitaNKowatl.png"/>
		  </chart>
		</example>
		<p>With it checked, however, it looks like <exampleRef num="x2.3.1.c"/>.</p>
		<example num="x2.3.1.c">
		  <chart>
			<img src="NJuanKitaNKowatlSmooth.png"/>
		  </chart>
		</example>
		<p>If you also check the &ldquo;Also try to enhance the smoothing of slanted lines&rdquo; checkbox, it will look like <exampleRef num="x2.3.1.d"/>.</p>
		<example num="x2.3.1.d">
		  <chart>
			<img src="NJuanKitaNKowatlSmoothEnhance.png"/>
		  </chart>
		</example>
	  </section3>
	</section2>
	<section2 id="s2.4">
	  <secTitle>Showing "Flat" Trees</secTitle>
	  <p>The Show flat view of lexical and gloss items check box will control how the lexical and gloss items are displayed.</p>
	  <p>
For example, without the box checked, the description in <exampleRef num="x2.4.1"/>
	  </p>
	  <example num="x2.4.1">
		<word>
		  <langData lang="l1">(IP (NP (Det (\L n (\G the))) (N' (N (\L Juan (\G John)))))
	(I' (I0)
		(VP (V' (V (\L kita (\G sees)))
				(NP (Det (\L n (\G the))) (N' (N (\L koatl (\G snake)))))))))
</langData>
		</word>
	  </example>
	  <p>will appear as in <exampleRef num="x2.4.2"/>.</p>
	  <example num="x2.4.2">
		<word>
		  <langData lang="l1">
			<img src="NJuanKitaNKowatl.png"/>
		  </langData>
		</word>
	  </example>
	  <p>With the box checked, however, it will look like the tree in <exampleRef num="x2.4.3"/>.</p>
	  <example num="x2.4.3">
		<word>
		  <langData lang="l1">
			<img src="NJuanKitaNKowatlFlat.png"/>
		  </langData>
		</word>
	  </example>
	</section2>
	<section2 id="s2.5">
	  <secTitle>Setting the Default Set of Parameters</secTitle>
	  <p>The <object class="MenuItem">Use these parameters as the default for new trees</object> check box allows you to have LingTree remember your parameter settings for other trees that you build.</p>
	</section2>
  </section1>
  <section1 id="s3">
	<secTitle>Saving the Tree</secTitle>
	<p>While the resulting tree looks nice within the LingTree program, what one usually wants to do is to embed the tree in some other document.  LingTree allows you to save the tree in any one of seven formats:</p>
	<ul>
	  <li>A Windows bitmap (*.bmp) file.</li>
	  <li>A Windows Enhanced Metafile (*.emf) file.</li>
	  <li>A Graphics Interchange Format (*.gif) file.<endnote id="e1">
		  <p>The .gif format is not available until we find out about possible licensing restrictions on its use.</p>
		</endnote>
	  </li>
	  <li>A JPEG File Interchange Format (*.jpg) file.</li>
	  <li>A Portable Network Graphics (*.png) file.</li>
	  <li>A Tagged Image File format (*.tif) file.</li>
	  <li>Scalable Vector Graphics format (*.svg) file.</li>
	</ul>
	<p>You select which of these formats you wish to save by clicking on the <object class="MenuItem">File</object> menu item and then clicking on the <object class="MenuItem">Set Save Formats...</object> item.  This calls up the <object class="DialogTitle">Set Save Formats</object> dialog box which looks like what is shown in <exampleRef num="x3.1"/>.</p>
	<example num="x3.1">
	  <word>
		<langData lang="l1">
		  <img src="SetSaveFormats.png"/>
		</langData>
	  </word>
	</example>
	<p>You merely check all the formats you wish to use.  LingTree will produce a file with the given extension for each checked format.  The file name (i.e. the part before the extension) is the same for all of them.</p>
	<p>In addition, you will find a file with an extension of ".tre" which contains information for LingTree to draw the tree.  Do not edit this file.</p>
	<p>Note that once you set these Save Formats, they stay in effect for all ensuing trees you build.</p>
  </section1>
  <section1 id="s4">
	<secTitle>Known problems</secTitle>
	<p>The following items are known to be less than desirable with this version of LingTree:</p>
	<ul>
	  <li>There is currently no way to key or display both a subscript and a superscript within a single node.  One can key and display simple subscripts or simple superscripts, but not both in the same node.  Also, it is not possible to key either a subscript or a superscript within the middle of the text of a node; once either a subscript or superscript is started, the rest of the text in that node will be either subscript or superscript.</li>
	  <li>There is currently no way to either key or display italic, bold, or underscore for parts of a given node.  One can, however, have all nodes of a given type display in italic or bold or be underscored.  See section  <sectionRef sec="s2"/>, especially <sectionRef sec="s2.3"/>.</li>
	  <li>The <object class="MenuItem">Edit / Undo</object> and <object class="MenuItem">Edit / Redo</object> menu items and keyboard shortcuts do not currently work.</li>
	</ul>
  </section1>
  <section1 id="s5">
	<secTitle>Support</secTitle>
	<p>If you have any questions with LingTree or find bugs in it, please contact the author:<br/>
	  <br/>
	Andy Black<br/>
	16131 N. Vernon Drive<br/>
	Tucson, AZ  85739<br/>
	USA<br/>
	(520) 825-6049<br/>
	andy_black@sil.org<br/>
	</p>
	<p>Copyright © 2002-2005 SIL International</p>
  </section1>
  <backMatter>
	<endnotes/>
  </backMatter>
</lingPaper>
