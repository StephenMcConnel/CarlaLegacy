Attribute VB_Name = "WriteSentrans"
Public Sub WriteSTRuleFile(xWFIDOM As MSXML2.DOMDocument30, sPath As String)

	If sPath = "" Then Exit Sub

	On Error GoTo catcherror

	Dim fs As New FileSystemObject
	Dim f As TextStream
	Set f = fs.CreateTextFile(sPath)
	f.WriteLine "\co These rules are generated by ParseBench.  If you make changes to this file, they will be lost the next time ParseBench writes SENTRANS rules. "

	Dim words As IXMLDOMNodeList
	Set words = xWFIDOM.selectNodes("wfi/wfic")

	Dim w As MSXML2.IXMLDOMNode
	For Each w In words
		Dim parses As IXMLDOMNodeList
		Set parses = w.selectNodes("parses/parse")

		Dim analysis As MSXML2.IXMLDOMNode
		For Each analysis In parses
			Dim attrGoodness As MSXML2.IXMLDOMNode
			Set attrGoodness = analysis.Attributes.getNamedItem("goodness")
			Dim goodness As String
			If attrGoodness Is Nothing Then
				goodness = "?"
			Else
				goodness = attrGoodness.Text
			End If

		   If goodness = "bad" Then
				f.Write "\rej "
				writeMatchPart f, analysis
				f.WriteLine "| " + w.Attributes.getNamedItem("form").Text
			End If

			' note that we are not outputting rules for good analyses, because only the first rule would be used.
			' rejecting the bad ones should be enough.
			' If goodness = "good" Then
			 '   f.Write "\am "
			  '  writeMatchPart f, analysis
			'End If
		Next analysis
	Next w
	f.Close

	Exit Sub

catcherror:
	MsgBox "There was a problem while writing sentrans rules." + vbCrLf + Err.Description
	On Error GoTo 0
	Exit Sub
End Sub
Private Sub writeMatchPart(f As TextStream, nAnalysis As MSXML2.IXMLDOMNode)
	Dim morph As MSXML2.IXMLDOMNode
	 For Each morph In nAnalysis.selectNodes("morph")
		 sType = morph.Attributes.getNamedItem("type").Text
		 If sType = "s" Or sType = "i" Then
			 f.Write "-"
		 End If
		 f.Write morph.Attributes.getNamedItem("id").Text
		 If sType = "p" Or sType = "i" Then
			 f.Write "-"
		 End If
		 f.Write " "
	 Next
End Sub
