				Join Compounds (JOIONCOMP) Version 0.2
							Alan Buseman
							 12-Feb-91



					 Table of Contents


	1.1 Introduction ...................................... 1
	1.2 Entering Compounds in the Root Dictionary ......... 1
	1.3 JOINCOMP Program Command Line Options ............. 1
	1.4 Putting JOINCOMP in the Analysis Batch File ....... 2
                Join Compounds (JOIONCOMP) Version 0.2
							Alan Buseman
							 12-Feb-91


1.1 Introduction

The Join  Compounds  program prepares a text for AMPLE by joining
together in the text all words that are shown as compounds in the
root dictionary.

It does  this  by  first reading the root dictionary and making a
list of  all  entries that contain underline characters.  It then
processes an  input  text  and  adds underline characters to join
together every  phrase  that  was joined in the dictionary.  When
AMPLE reads the text, it analyzes each compound as a single root,
giving it  a single gloss.  STAMP then outputs a single word or a
different lexical compound as a target equivalent.

The  JOINCOMP   program   was   designed  largely  for  isolating
languages.  In  such  languages a lexical compound often has only
one form because there is no morphology to cause variant forms of
the words  in  the  compound.   For languages with affixes, it is
better  to  use  the  Sentence  Transfer  program  to  deal  with
idiomatic  phrases   and   lexical  compounds,  because  Sentence
Transfer can work with roots.


1.2 Entering Compounds in the Root Dictionary

To  use    the   JOINCOMP   program,  make  entries  for  lexical
compounds in the root dictionary, using an underline character to
join  the   words  together.   Target  equivalents  can  also  be
compounds joined with underlines.

For example,  the  following  entry  changes  "right away" in the
source to  "as  soon as possible" in the target, using a gloss of
"immediately".

	\r right_away
	\c Adv
	\g immediately
	\e as_soon_as_possible


1.3 JOINCOMP Program Command Line Options

The JOINCOMP  program takes its file names from the command line,
as shown in the following example:

	joincomp -d friengrt.dic -i frilake.txt -o frilake.joi

The -d  says  that  the root dictionary to use is "friengrt.dic".
The -i  gives  the  input  text file, and the -o gives the output
file.  I recommend a file type of .JOI for the joined file.  This
file is then input to AMPLE.

At the  end  of  a  run  the JOINCOMP program displays a count of
words processed, and a count of compounds joined.  The word count
shows the  number  of  words  output, counting each compound as a
word.

JOINCOMP Program                                           Page 2


The JOINCOMP  program  has several useful options.  The -m option
causes it  to  monitor progress like AMPLE and STAMP, showing a 1
for every compound joined, and a dot for every word not joined.

The -s  option (for show compounds) causes the program to display
a list of the compounds it finds in the dictionary.

The -t  option  (for  trace)  causes the program to display every
compound it joins in the text.

The statistics  report,  and  the output of the -s and -t options
can be redirected to a log file using the right wedge.

The -p  (for  partial)  option  tells  the  program  that partial
matches are  all  right.   Normally  the program only considers a
group of  words  a  compound  if  it  the last word is completely
matched.  The  -p  option accepts the match even if the last word
of a  compound in the text has more letters than the last word of
the compound in the dictionary.  This option can be used to match
compounds which  have  a  suffix on the last word.  However, this
only works  on  the  last  word  of  a  compound, so the JOINCOMP
program is  still  very  ineffective  for languages with affixes.
The Sentence Transfer program is better for such languages.

The -c  option  can  be  used  to give the name of the Input Text
Control File.   JOINCOMP  looks  at the word formation characters
and the  \nocap  fields  in the file.  This option is not usually
necessary, because  the only use Join makes of the word formation
characters is  to  check to make sure the last word of a compound
has been  completely matched.  It verifies this by checking to be
sure there  are  no  more  word  formation characters in the word
after the part that was matched.

The default  set  of  word  formation  characters  is the English
alphaet, which  is  usually  enough  to  work fine.  In isolating
languages there  is not usually any problem because the words are
short, and  partial  matches  of the front of a word are unlikely
anyway.

The -c  option  can also find the \nocap option in the Input Text
Control file.   This  also  is not usually necessary, because the
change it  makes  is  to  require that all letters match exactly,
rather than allowing upper case letters in the input to match the
equivalent lower case letter.


1.4 Putting JOINCOMP in the Analysis Batch File

To add  the  join process to the analysis batch file shown in the
CADA tutorial,  add a line to run the JOINCOMP program at the top
and change the input to AMPLE as follows:

	joincomp -d friengrt.dic -i %1.txt -o %1.joi
	ample -r -m -n 64 -f frian.cmd -i %1.joi -o %1.ana >ample.log

The dictionary  name  after the -d should be your root dictionary
name.  The  input  to AMPLE has been changed to "%1.joi" to cause
AMPLE to  read  the  output  of  JOINCOMP instead of the original
text.
