<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE masterGrammar SYSTEM "MasterGrammar.dtd">
<masterGrammar>
	<!-- |main set of feature templates -->
	<generalizedTemplates>
Let absolutive		be	&lt;head agr case&gt; = absolutive
Let absolutive_prefix   be      &lt;head type prefix absolutive&gt;   = +
								[absolutive]
Let absolutive_suffix   be      &lt;head type suffix absolutive&gt;   = +
								[absolutive]
Let -absolutive		be	[]
Let accusative		be	&lt;head agr case&gt; = accusative
Let -accusative		be	[]
Let accusative.or.genitive be   &lt;head agr case&gt; = {accusative genitive}
Let AdjP-final		be	&lt;head type AdjP-final&gt;		= +
				&lt;head type AdjP-initial&gt;	= -
Let AdjP-initial	be	&lt;head type AdjP-initial&gt;	= +
				&lt;head type AdjP-final&gt;		= -
Let AdvP-final		be	&lt;head type AdvP-final&gt;		= +
				&lt;head type AdvP-initial&gt;	= -
Let AdvP-initial	be	&lt;head type AdvP-initial&gt;	= +
				&lt;head type AdvP-final&gt;		= -
Let animate		be	&lt;head agr animate&gt;		= +
Let animate_object	be	&lt;head object head agr animate&gt; = +
Let animate_subject	be	&lt;head subject head agr animate&gt; = +
Let -animate		be	&lt;head agr animate&gt;		= -
Let -animate_object	be	&lt;head object head agr animate&gt;	= -
Let -animate_subject	be	&lt;head subject head agr animate&gt; = -
Let class_1		be	&lt;head agr class&gt;		= 1
Let class_2		be	&lt;head agr class&gt;		= 2
Let class_3		be	&lt;head agr class&gt;		= 3
Let class_4		be	&lt;head agr class&gt;		= 4
Let class_5		be	&lt;head agr class&gt;		= 5
Let class_6		be	&lt;head agr class&gt;		= 6
Let class_7		be	&lt;head agr class&gt;		= 7
Let class_8		be	&lt;head agr class&gt;		= 8
Let class_9		be	&lt;head agr class&gt;		= 9
Let class_10		be	&lt;head agr class&gt;		= 10
Let class_11		be	&lt;head agr class&gt;		= 11
Let class_12		be	&lt;head agr class&gt;		= 12
Let class_13		be	&lt;head agr class&gt;		= 13
Let class_14		be	&lt;head agr class&gt;		= 14
Let class_15		be	&lt;head agr class&gt;		= 15
Let class_16		be	&lt;head agr class&gt;		= 16
Let class_17		be	&lt;head agr class&gt;		= 17
Let class_18		be	&lt;head agr class&gt;		= 18
Let class_19		be	&lt;head agr class&gt;		= 19
Let class_20		be	&lt;head agr class&gt;		= 20
Let class_1_object	be	&lt;head object head agr class&gt;	= 1
Let class_2_object	be	&lt;head object head agr class&gt;	= 2
Let class_3_object	be	&lt;head object head agr class&gt;	= 3
Let class_4_object	be	&lt;head object head agr class&gt;	= 4
Let class_5_object	be	&lt;head object head agr class&gt;	= 5
Let class_6_object	be	&lt;head object head agr class&gt;	= 6
Let class_7_object	be	&lt;head object head agr class&gt;	= 7
Let class_8_object	be	&lt;head object head agr class&gt;	= 8
Let class_9_object	be	&lt;head object head agr class&gt;	= 9
Let class_10_object	be	&lt;head object head agr class&gt;	= 10
Let class_11_object	be	&lt;head object head agr class&gt;	= 11
Let class_12_object	be	&lt;head object head agr class&gt;	= 12
Let class_13_object	be	&lt;head object head agr class&gt;	= 13
Let class_14_object	be	&lt;head object head agr class&gt;	= 14
Let class_15_object	be	&lt;head object head agr class&gt;	= 15
Let class_16_object	be	&lt;head object head agr class&gt;	= 16
Let class_17_object	be	&lt;head object head agr class&gt;	= 17
Let class_18_object	be	&lt;head object head agr class&gt;	= 18
Let class_19_object	be	&lt;head object head agr class&gt;	= 19
Let class_20_object	be	&lt;head object head agr class&gt;	= 20
Let class_1_subject	be	&lt;head subject head agr class&gt;	= 1
Let class_2_subject	be	&lt;head subject head agr class&gt;	= 2
Let class_3_subject	be	&lt;head subject head agr class&gt;	= 3
Let class_4_subject	be	&lt;head subject head agr class&gt;	= 4
Let class_5_subject	be	&lt;head subject head agr class&gt;	= 5
Let class_6_subject	be	&lt;head subject head agr class&gt;	= 6
Let class_7_subject	be	&lt;head subject head agr class&gt;	= 7
Let class_8_subject	be	&lt;head subject head agr class&gt;	= 8
Let class_9_subject	be	&lt;head subject head agr class&gt;	= 9
Let class_10_subject	be	&lt;head subject head agr class&gt;	= 10
Let class_11_subject	be	&lt;head subject head agr class&gt;	= 11
Let class_12_subject	be	&lt;head subject head agr class&gt;	= 12
Let class_13_subject	be	&lt;head subject head agr class&gt;	= 13
Let class_14_subject	be	&lt;head subject head agr class&gt;	= 14
Let class_15_subject	be	&lt;head subject head agr class&gt;	= 15
Let class_16_subject	be	&lt;head subject head agr class&gt;	= 16
Let class_17_subject	be	&lt;head subject head agr class&gt;	= 17
Let class_18_subject	be	&lt;head subject head agr class&gt;	= 18
Let class_19_subject	be	&lt;head subject head agr class&gt;	= 19
Let class_20_subject	be	&lt;head subject head agr class&gt;	= 20
Let completive		be	&lt;head infl aspect&gt; =  completive
Let compound            be      &lt;head type compound&gt;            = +
Let -compound           be      &lt;head type compound&gt;            = -
Let conjoins_DP         be      &lt;head type conjoins_DP&gt;         = +
Let conjoins_IP         be      &lt;head type conjoins_IP&gt;         = +
Let -conjoins_DP        be      &lt;head type conjoins_DP&gt;         = -
Let -conjoins_IP        be      &lt;head type conjoins_IP&gt;         = -
Let continuative	be	&lt;head infl aspect continuative&gt; = +
Let copular		be	&lt;head type copular&gt;		= +
Let copular_prefix      be      &lt;head type prefix copular&gt;      = +
								[copular]
Let copular_suffix      be      &lt;head type suffix copular&gt;      = +
								[copular]
Let CP-final		be	&lt;head type CP-final&gt;		= +
Let -CP-final           be      &lt;head type CP-final&gt;            = -
Let CP-initial          be      &lt;head type CP-initial&gt;          = +
Let -CP-initial         be      &lt;head type CP-initial&gt;          = -
Let CP-specifier-initial be	&lt;head type CP-specifier-initial&gt; = +
Let dative              be      &lt;head agr case&gt; = dative
Let declarative		be	&lt;head infl mood declarative&gt;    = +
Let ditransitive	be	&lt;head type ditransitive&gt;	= +
								&lt;head type transitive&gt;          = +
Let DP-final            be      &lt;head type DP-final&gt;            = +
Let -DP-final           be      &lt;head type DP-final&gt;            = -
Let DP-initial          be      &lt;head type DP-initial&gt;          = +
Let -DP-initial         be      &lt;head type DP-initial&gt;          = -
Let dual		be	&lt;head agr number&gt; = dual
Let dual_object		be	&lt;head object head agr number&gt; = dual
Let dual_subject	be	&lt;head subject head agr number&gt; = dual
Let embedded_CP         be      &lt;embedded cat&gt; = CP
Let embedded_IP         be      &lt;embedded cat&gt; = IP
Let embedded_IPpro-dropOrCP be  {&lt;embedded cat&gt; = IP
								 &lt;embedded head subject head type pro-drop&gt; = +
								/&lt;embedded cat&gt; = CP
								 &lt;embedded headsubject head type pro-drop&gt; = -}
Let embedded_finite     be      &lt;embedded head infl finite&gt;          = +
								&lt;embedded head type question&gt;        = !-
Let embedded_nonfinite  be      &lt;embedded head infl finite&gt;          = -
								&lt;embedded head type question&gt;        = !-
Let embedded_perfective be      &lt;embedded head infl aspect perfective&gt; = +
Let embedded_pro-drop   be      &lt;embedded head subject head type pro-drop&gt; = +
Let embedded_question   be      &lt;embedded head type question&gt;        = +
Let embedded_question_allowed be &lt;embedded head type question&gt;       = {+/-}
Let embedded_subjunctive be     &lt;embedded head infl mood realis&gt;     = -
<!-- ||add other restrictions -->
		<!-- ||add defaults to -!!! -->
Let ergative		be	&lt;head agr case&gt; = ergative
Let ergative_prefix     be      &lt;head type prefix ergative&gt;     = +
								[ergative]
Let ergative_suffix     be      &lt;head type suffix ergative&gt;     = +
								[ergative]
Let -ergative		be	[]
Let exclusive		be	&lt;head agr person&gt; = first_exclusive
Let feminine		be	&lt;head agr gender&gt; = feminine
Let feminine_object	be	&lt;head object head agr gender&gt; = feminine
Let feminine_subject	be	&lt;head subject head agr gender&gt; = feminine
Let finite              be      &lt;head infl finite&gt;               = +
Let -finite             be      &lt;head infl finite&gt;               = -
Let first		be	&lt;head agr person&gt; = first
Let first_exclusive     be      &lt;head agr person&gt; = first_exclusive
Let first_inclusive     be      &lt;head agr person&gt; = first_inclusive
Let first_exclusive_subject be  &lt;head subject head agr person&gt; = first_exclusive
Let first_exclusive_object  be  &lt;head object head agr person&gt; = first_exclusive
Let first_inclusive_subject be  &lt;head subject head agr person&gt; = first_inclusive
Let first_inclusive_object be   &lt;head object head agr person&gt; = first_inclusive
Let first_object	be	&lt;head object head agr person&gt; = first
Let first_subject	be	&lt;head subject head agr person&gt; = first
Let future		be	&lt;head infl tense&gt; = future
Let genitive		be	&lt;head agr case&gt; = genitive
Let genitive_prefix     be      &lt;head type prefix genitive&gt;     = +
								[genitive]
Let genitive_suffix     be      &lt;head type suffix genitive&gt;     = +
								[genitive]
Let -genitive		be	[]
Let habitual		be	&lt;head infl aspect habitual&gt;     = +
Let human               be      &lt;head type human&gt;               = +
Let -human              be      &lt;head type human&gt;               = -
Let imperative		be	&lt;head infl mood imperative&gt;     = +
Let imperfective	be	&lt;head infl aspect imperfective&gt; = +
Let inclusive		be	&lt;head agr person&gt; = first_inclusive
Let incompletive	be	&lt;head infl aspect incompletive&gt; = +
Let indefinite          be      &lt;head type indefinite&gt;          = +
								&lt;head type relative&gt;            = -
Let infinitive          be      &lt;head infl finite&gt;              = -
Let instrumental        be      &lt;head agr case&gt; = instrumental
Let interrogative	be	&lt;head infl mood interrogative&gt;  = +
				&lt;head type question&gt; 		= +
Let -interrogative  	be	&lt;head type question&gt;		= -
								&lt;head infl mood interrogative&gt;  = -
Let intransitive	be	&lt;head type transitive&gt;		= -
Let irrealis		be	&lt;head infl mood realis&gt;         = -
Let locative		be	&lt;head type locative&gt;		= +
Let manner		be	&lt;head type manner&gt;		= +
Let masculine		be	&lt;head agr gender&gt; = masculine
Let masculine_object	be	&lt;head object head agr gender&gt; = masculine
Let masculine_subject	be	&lt;head subject head agr gender&gt; = masculine
Let mass                be      &lt;head type mass&gt;                = +
Let modifies_Adj	be	&lt;head type modifies_Adj&gt;	= +
Let modifies_Adv	be	&lt;head type modifies_Adv temporal&gt; = +
				&lt;head type modifies_Adv locative&gt; = +
				&lt;head type modifies_Adv manner&gt; = +
				&lt;head type modifies_Adv reason&gt; = +
Let modifies_Adv-reason be	&lt;head type modifies_Adv reason&gt;	= -
				&lt;head type modifies_Adv locative&gt; = +
				&lt;head type modifies_Adv manner&gt; = +
				&lt;head type modifies_Adv temporal&gt; = +
Let modifies_locative	be	&lt;head type modifies_Adv locative&gt; = +
Let modifies_manner	be	&lt;head type modifies_Adv manner&gt;	= +
Let modifies_NP		be	&lt;head type modifies_NP&gt;		= +
Let modifies_PP		be	&lt;head type modifies_PP&gt;		= +
Let modifies_Q 		be	&lt;head type modifies_Q&gt;		= +
Let modifies_reason	be	&lt;head type modifies_Adv reason&gt;	= +
Let modifies_temporal	be	&lt;head type modifies_Adv temporal&gt; = +
Let motion		be	&lt;head type motion&gt;		= +
Let negative		be	&lt;head infl polarity&gt;            = -
Let neuter		be	&lt;head agr gender&gt; = neuter
Let neuter_object	be	&lt;head object head agr gender&gt; = neuter
Let neuter_subject	be	&lt;head subject head agr gender&gt; = neuter
Let nominative		be	&lt;head agr case&gt; = nominative
Let -nominative		be	[]
Let nominative.or.accusative be &lt;head agr case&gt; = {nominative accusative}
Let nominative.or.genitive   be &lt;head agr case&gt; = {nominative genitive}
Let oblique             be      &lt;head type oblique&gt;             = +
Let participle          be      &lt;head type participle&gt;          = +
Let partitive		be	&lt;head type partitive&gt;		= +
Let passive		be	&lt;head type passive&gt;		= +
Let passive.optional	be	&lt;head type passive&gt;		= {+ -}
Let past		be	&lt;head infl tense past&gt;          = +
Let perfective		be	&lt;head infl aspect perfective&gt;   = +
Let plural		be	&lt;head agr number&gt; = plural
Let plural_object	be	&lt;head object head agr number&gt; = plural
Let plural_subject	be	&lt;head subject head agr number&gt; = plural
Let poss_dual		be	&lt;head possessor agr number&gt; = dual
Let poss_exclusive	be	&lt;head possessor agr person&gt; = first_exclusive
Let poss_feminine	be	&lt;head possessor agr gender&gt; = feminine
Let poss_first		be	&lt;head possessor agr person&gt; = first
Let poss_inclusive	be	&lt;head possessor agr person&gt; = first_inclusive
Let poss_masculine	be	&lt;head possessor agr gender&gt; = masculine
Let poss_neuter  	be	&lt;head possessor agr gender&gt; = neuter
Let poss_plural		be	&lt;head possessor agr number&gt; = plural
Let poss_second		be	&lt;head possessor agr person&gt; = second
Let poss_singular	be	&lt;head possessor agr number&gt; = singular
Let poss_third		be	&lt;head possessor agr person&gt; = third
Let poss_prefix         be      &lt;head type prefix poss&gt;         = +
Let poss_suffix         be      &lt;head type suffix poss&gt;         = +
Let possessed		be	&lt;head type possessed&gt;           = +
Let possessive          be      &lt;head type possessive&gt;          = +
Let potential		be	&lt;head infl aspect potential&gt;    = +
Let present		be	&lt;head infl tense present&gt;       = +
Let progressive		be	&lt;head infl aspect progressive&gt;  = +
Let P_prefix            be      &lt;head type prefix P&gt;            = +
Let P_prefix_N          be      &lt;head type P_prefix_N&gt;          = +
Let P_suffix            be      &lt;head type suffix P&gt;            = +
Let P_suffix_N          be      &lt;head type P_suffix_N&gt;          = +
Let question		be	&lt;head type question&gt;		= +
Let -question		be	&lt;head type question&gt;		= -
Let QP-final		be	&lt;head type QP-final&gt;		= +
				&lt;head type QP-initial&gt;		= -
Let QP-initial		be	&lt;head type QP-initial&gt;		= +
				&lt;head type QP-final&gt;		= -
Let quantifier		be	&lt;head type quantifier&gt;		= +
Let reason		be	&lt;head type reason&gt;		= +
Let realis		be	&lt;head infl mood realis&gt;         = +
Let reciprocal 		be	&lt;head type reciprocal&gt;		= +
Let reflexive		be	&lt;head type reflexive&gt;		= +
Let relative		be	&lt;head type relative&gt;		= +
Let +root		be	&lt;head type root&gt;		= +
Let -root		be	&lt;head type root&gt;		= -
Let second		be	&lt;head agr person&gt; = second
Let second_object	be	&lt;head object head agr person&gt; = second
Let second_subject	be	&lt;head subject head agr person&gt; = second
Let sentential		be	&lt;head type sentential&gt;		= +
Let sentential_with_object be   &lt;head type sentential_with_object&gt; = +  <!-- |default- -->
Let singular		be	&lt;head agr number&gt; = singular
Let singular_object	be	&lt;head object head agr number&gt; = singular
Let singular_subject	be	&lt;head subject head agr number&gt; = singular
<!-- |Let stand-alone         be      &lt;head type stand-alone&gt;         = + -->
Let stative		be	&lt;head infl aspect stative&gt;      = +
Let subjunctive         be      &lt;head infl mood realis&gt;         = -
Let takes_Adv           be      &lt;head type takes_Adv&gt;           = +
Let takes_DP            be      &lt;head type takes_DP&gt;            = +
Let temporal		be	&lt;head type temporal&gt;		= +
Let third		be	&lt;head agr person&gt; = third
Let third_object	be	&lt;head object head agr person&gt; = third
Let third_subject	be	&lt;head subject head agr person&gt; = third
Let transitive		be	&lt;head type transitive&gt;		= +
Let wh			be	&lt;head type wh&gt;			= +
Let -wh			be	&lt;head type wh&gt; 			= -
Let whQ_prefix		be	&lt;head type prefix whQ&gt;          = +
Let whQ_prefix_V	be      &lt;head type whQ_prefix_V&gt;        = +
Let whQ_suffix		be	&lt;head type suffix whQ&gt;          = +
Let Ywh_suffix_V	be      &lt;head type whQ_suffix_V&gt;        = +
Let YNQ_prefix		be	&lt;head type prefix YNQ&gt;          = +
Let YNQ_prefix_V	be      &lt;head type YNQ_prefix_V&gt;        = +
Let YNQ_suffix		be	&lt;head type suffix YNQ&gt;          = +
Let YNQ_suffix_V	be      &lt;head type YNQ_suffix_V&gt;        = +
</generalizedTemplates>
	<specializedTemplates show="">
		<!-- |-Category changes and defaults (basic set) -->
Let Adj			be	&lt;cat&gt; = !Adj
				&lt;head type ordinal&gt;		= !-
				&lt;head type wh&gt;			= !-
				&lt;head type sentential&gt;          = !-
								&lt;head type relative&gt;            = !-
								&lt;head type prefix copular&gt;      = !-
								&lt;head type suffix copular&gt;      = !-

Let Adv			be	&lt;cat&gt; = !Adv
				&lt;head type wh&gt;			= !-
								&lt;head type manner&gt;              = !-
								&lt;head type takes_Adv&gt;           = !-
								&lt;head type takes_DP&gt;            = !-

Let Art			be	&lt;cat&gt; = !Art
				&lt;head type wh&gt;			= !-

Let Aux			be	&lt;cat&gt; = !Aux
				&lt;head type passive&gt;		= !-
				&lt;head infl finite&gt;              = !+

Let C			be	&lt;cat&gt; = !C
				&lt;head type question&gt;		= !-

Let Conj                be      &lt;cat&gt; = !Conj

Let Deg                 be      &lt;cat&gt; = !Deg
								&lt;head type modifies_Adj&gt;        = !-
								&lt;head type modifies_Adv temporal&gt; = !-
								&lt;head type modifies_Adv locative&gt; = !-
								&lt;head type modifies_Adv manner&gt; = !-
								&lt;head type modifies_Adv reason&gt; = !-
								&lt;head type modifies_NP&gt;         = !-
								&lt;head type modifies_PP&gt;         = !-
								&lt;head type modifies_Q&gt;          = !-
								&lt;head type quantifier&gt;          = !-
								&lt;head type wh&gt;                  = !-
								&lt;head infl polarity&gt;            = !+
								&lt;head type relative&gt;            = !-
								&lt;head agr number&gt; = !singular

Let Dem                 be      &lt;cat&gt; = !Dem
								&lt;head type wh&gt;                  = !-
								&lt;head agr person&gt; = !third
								&lt;head type relative&gt;            = !-

Let Excl                be      &lt;cat&gt; = Excl

Let N                   be      &lt;cat&gt; = !N
								&lt;head agr person&gt; = !third
								&lt;head infl polarity&gt;            = !+
								&lt;head agr animate&gt;              = !-
								&lt;head type human&gt;               = !-
								&lt;head type wh&gt;                  = -
								&lt;head type reciprocal&gt;          = !-
								&lt;head type sentential&gt;          = !-
								&lt;head type proper&gt;              = !-
								&lt;head type relative&gt;            = !-
								&lt;head type mass&gt;                = !-
								&lt;head type prefix poss&gt;         = !-
								&lt;head type suffix poss&gt;         = !-
								&lt;head type prefix copular&gt;      = !-
								&lt;head type suffix copular&gt;      = !-
								&lt;head type prefix P&gt;            = !-
								&lt;head type suffix P&gt;            = !-

Let Num                 be      &lt;cat&gt; = !Num
								&lt;head type ordinal&gt;             = !-
								&lt;head type wh&gt;                  = !-
								&lt;head agr number&gt; = !plural
								&lt;head type relative&gt;            = !-

Let ordinal             be      &lt;cat&gt; = Adj
								&lt;head type ordinal&gt;             = +

Let P                   be      &lt;cat&gt; = !P
								&lt;head type passive&gt;             = !-
								&lt;head type wh&gt;                  = -
								&lt;head type partitive&gt;           = !-
								&lt;head type prefix copular&gt;      = !-
								&lt;head type suffix copular&gt;      = !-
								&lt;head type temporal&gt;            = !-
				&lt;head type locative&gt;            = !-

Let Poss                be      &lt;cat&gt; = Poss
								[genitive]

Let Poss_ergative       be      &lt;cat&gt; = Poss
								[ergative]

Let Poss_absolutive     be      &lt;cat&gt; = Poss
								[absolutive]

Let Pron                be      &lt;cat&gt; = !Pron
								&lt;head type wh&gt;                  = !-
								&lt;head agr animate&gt;             = !+
								&lt;head infl polarity&gt;            = !+
								&lt;head type reciprocal&gt;          = !-
								&lt;head type human&gt;               = !+
								&lt;head type relative&gt;            = !-
								&lt;head type prefix copular&gt;      = !-
								&lt;head type suffix copular&gt;      = !-

Let PropN		be	&lt;cat&gt; = N
				&lt;head agr animate&gt;		= !+
								&lt;head type human&gt;               = !+
								&lt;head infl polarity&gt;            = !+
				&lt;head agr person&gt; = !third
				&lt;head type wh&gt;			= -
				&lt;head type proper&gt;		= +
								&lt;head type reciprocal&gt;          = !-
								&lt;head type sentential&gt;          = !-
								&lt;head type relative&gt;            = !-
								&lt;head type mass&gt;                = !-
								&lt;head type prefix poss&gt;         = !-
								&lt;head type suffix poss&gt;         = !-
								&lt;head type prefix copular&gt;      = !-
								&lt;head type suffix copular&gt;      = !-

Let Q                   be      &lt;cat&gt; = Q
								&lt;head type wh&gt;                  = !-

Let V                   be      &lt;cat&gt; = !V
								&lt;head type passive&gt;             = !-
								&lt;head type sentential&gt;          = !-
								&lt;head type copular&gt;             = !-
								&lt;head type motion&gt;              = !-
								&lt;head type reciprocal&gt;          = !-
								&lt;head type reflexive&gt;           = !-
								&lt;head infl finite&gt;              = !+
								&lt;head infl polarity&gt;            = !+
								&lt;head type participle&gt;          = !-
								&lt;head infl mood realis&gt;         = !+

<!-- |****Category changes via features -->

Let makeAdj		be	&lt;cat&gt; = Adj
				&lt;head type ordinal&gt;		= !-
				&lt;head type wh&gt;			= !-
				&lt;head type sentential&gt;          = !-
								&lt;head type relative&gt;            = !-
								&lt;head type prefix copular&gt;      = !-
								&lt;head type suffix copular&gt;      = !-

Let makeAdv		be	&lt;cat&gt; = Adv
				&lt;head type wh&gt;			= !-
								&lt;head type manner&gt;              = !-

Let makeArt		be	&lt;cat&gt; = Art
				&lt;head type wh&gt;			= !-

Let makeAux		be	&lt;cat&gt; = Aux
				&lt;head type passive&gt;		= !-
				&lt;head infl finite&gt;              = !+

Let makeC		be	&lt;cat&gt; = C
				&lt;head type question&gt;		= !-

Let makeConj            be      &lt;cat&gt; = Conj

Let makeDeg             be      &lt;cat&gt; = Deg
								&lt;head type modifies_Adj&gt;        = !-
								&lt;head type modifies_Adv temporal&gt; = !-
								&lt;head type modifies_Adv locative&gt; = !-
								&lt;head type modifies_Adv manner&gt; = !-
								&lt;head type modifies_Adv reason&gt; = !-
								&lt;head type modifies_NP&gt;         = !-
								&lt;head type modifies_PP&gt;         = !-
								&lt;head type modifies_Q&gt;          = !-
								&lt;head type quantifier&gt;          = !-
								&lt;head type wh&gt;                  = !-
								&lt;head infl polarity&gt;            = !+
								&lt;head type relative&gt;            = !-
								&lt;head agr number&gt; = !singular

Let makeDem             be      &lt;cat&gt; = Dem
								&lt;head type wh&gt;                  = !-
								&lt;head agr person&gt; = !third
								&lt;head type relative&gt;            = !-

Let makeN               be      &lt;cat&gt; = N
								&lt;head agr person&gt; = !third
								&lt;head infl polarity&gt;            = !+
								&lt;head agr animate&gt;             = !-
								&lt;head type human&gt;               = !-
								&lt;head type wh&gt;                  = -
								&lt;head type reciprocal&gt;          = !-
								&lt;head type sentential&gt;          = !-
								&lt;head type proper&gt;              = !-
								&lt;head type relative&gt;            = !-
								&lt;head type mass&gt;                = !-
								&lt;head type prefix poss&gt;         = !-
								&lt;head type suffix poss&gt;         = !-
								&lt;head type prefix copular&gt;      = !-
								&lt;head type suffix copular&gt;      = !-

Let makeNum             be      &lt;cat&gt; = Num
								&lt;head type ordinal&gt;             = !-
								&lt;head type wh&gt;                  = !-
								&lt;head agr number&gt; = !plural
								&lt;head type relative&gt;            = !-

Let makeP               be      &lt;cat&gt; = P
								&lt;head type passive&gt;             = !-
								&lt;head type wh&gt;                  = -
								&lt;head type partitive&gt;           = !-
								&lt;head type prefix copular&gt;      = !-
								&lt;head type suffix copular&gt;      = !-
				&lt;head type temporal&gt;            = !-

Let makePron            be      &lt;cat&gt; = Pron
								&lt;head type wh&gt;                  = !-
								&lt;head agr animate&gt;             = !+
								&lt;head infl polarity&gt;            = !+
								&lt;head type reciprocal&gt;          = !-
								&lt;head type human&gt;               = !+
								&lt;head type relative&gt;            = !-
								&lt;head type prefix copular&gt;      = !-
								&lt;head type suffix copular&gt;      = !-

Let makeV               be      &lt;cat&gt; = V
								&lt;head type passive&gt;             = !-
								&lt;head type sentential&gt;          = !-
								&lt;head type copular&gt;             = !-
								&lt;head type motion&gt;              = !-
								&lt;head type reciprocal&gt;          = !-
								&lt;head infl finite&gt;              = !+
								&lt;head infl polarity&gt;            = !+
								&lt;head type participle&gt;          = !-
								&lt;head infl mood realis&gt;         = !+

</specializedTemplates>
	<!-- |**need set for nominative default -->
	<!-- |**need set without singular default for quantifier marking lgs -->
	<!-- |**need set for alienably possessed -->
	<!-- |**need sets for DP-initial and DP-final Num -->
	<!-- |**need sets for P,copular,gen,erg,abs_prefix,suffix, P_on_N, YNQ -->
	<!-- | -CP-specifier-initial default for VSO with possibility -->

	<!-- |***Category Mapper templates for starter kit**** -->
	<catMapper show="cardinalNumberCat">Num</catMapper>
<showWhen id="cardinalNumberCat">
	  <whenValue element="qp/cardinalNumberCategory" value="" negateValue="yes"/>
</showWhen>
	<catMapper show="adverbCat">Adv</catMapper>
<showWhen id="adverbCat">
	  <whenValue element="advp/adverbCategory" value="" negateValue="yes"/>
</showWhen>
	<catMapper show="adjectiveCat">Adj</catMapper>
<showWhen id="adjectiveCat">
	  <whenValue element="adjp/adjectiveCategory" value="" negateValue="yes"/>
</showWhen>
	<catMapper show="articleCat">Art</catMapper>
<showWhen id="articleCat">
	  <whenValue element="np/articleCategory" value="" negateValue="yes"/>
</showWhen>
	<catMapper show="demonstrativeCat">Dem</catMapper>
<showWhen id="demonstrativeCat">
	  <whenValue element="np/demonstrativeCategory" value="" negateValue="yes"/>
</showWhen>
	<catMapper show="nounCat">N</catMapper>
<showWhen id="nounCat">
	  <whenValue element="np/nounCategory" value="" negateValue="yes"/>
</showWhen>
	<catMapper show="propAnimate1Cat">PropN</catMapper>
<showWhen id="propAnimate1Cat">
	  <whenValue element="np/propAnimate1Category" value="" negateValue="yes"/>
</showWhen>
	<catMapper show="propAnimate2Cat">PropN</catMapper>
<showWhen id="propAnimate2Cat">
	  <whenValue element="np/propAnimate2Category" value="" negateValue="yes"/>
</showWhen>
	<catMapper show="propInanimateCat">PropN</catMapper>
<showWhen id="propInanimateCat">
	  <whenValue element="np/propInanimateCategory" value="" negateValue="yes"/>
</showWhen>
<specializedTemplates show="propInanimateCat">
									   &lt;head agr animate&gt; = -
</specializedTemplates>
	<catMapper show="pronounCat">Pron</catMapper>
<showWhen id="pronounCat">
	  <whenValue element="pron/pronounCategory" value="" negateValue="yes"/>
</showWhen>
	<catMapper show="pCat">P</catMapper>
<showWhen id="pCat">
	  <whenValue element="pp/pCategory" value="" negateValue="yes"/>
</showWhen>
	<catMapper show="auxCat">Aux</catMapper>
<showWhen id="auxCat">
	  <whenValue element="ip/auxCategory" value="" negateValue="yes"/>
</showWhen>
   <catMapper show="verbCat">V</catMapper>
<showWhen id="verbCat">
	  <whenValue element="ip/verbCategory" value="" negateValue="yes"/>
</showWhen>
   <catMapper show="whPronCat">Pron</catMapper>
<showWhen id="whPronCat">
	  <whenValue element="q/whPronCategory" value="" negateValue="yes"/>
</showWhen>
	<!-- |************************************************************ -->
	<!-- |Phrase structure rules -->
	<rule show="Soptiontesting">
rule {S option testing - first eight sections}
S = AdvP / AdjP / QP / DP / PP
	&lt;S option&gt; = testing
</rule>
	<showWhen id="Soptiontesting">
		<whenValue element="pp" attr="checkedOff" value="yes" negateValue="yes"/>
	</showWhen>
	<rule>
rule {S option start.symbol - section 9 and beyond}
S = (AdvP_1 / PP_1 / DP_1) {IP / CP} (AdvP_2 / PP_2 / DP_2)
	&lt;S head&gt; = &lt;IP head&gt;
	&lt;S head&gt; = &lt;CP head&gt;
	&lt;IP head type root&gt; = +
	&lt;IP head type question&gt; = -
	&lt;CP head type root&gt; = +
	&lt;AdvP_1 head type manner&gt; = -
	&lt;AdvP_2 head type manner&gt; = -
	&lt;DP_1 head type temporal&gt; = +
	&lt;DP_2 head type temporal&gt; = +
	&lt;S option&gt; = start.symbol
</rule>
</masterGrammar>
