<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE masterGrammar SYSTEM "MasterGrammar.dtd">
<masterGrammar>
	<rule show="swIP">
rule {start symbol}
S = IP / CP
		&lt; S head &gt; = &lt; IP head &gt;
		&lt;S head&gt; = &lt;CP head&gt;
		&lt;IP head type root&gt; = +
		&lt;IP head type question&gt; = -
		&lt;CP head type root&gt; = +
</rule>
	<showWhen id="swIP">
		<whenValue element="ip" attr="checkedOff" value="yes"/>
	</showWhen>
	<rule show="swNotIP">
rule {testing}
S = NP / AdjP / PP / QP / AdvP
</rule>
	<showWhen id="swNotIP">
		<whenValue element="ip" attr="checkedOff" value="yes" negateValue="yes"/>
	</showWhen>
	<rule show="swCPOpt1">
|********************************************************
|CP option 1 - no fronting, root
rule {CP option 1 - no fronting, root}
CP = C'
		&lt;CP head&gt; = &lt;C' head&gt;
		&lt;C' head type root &gt; = +
		&lt;C' head type vacuous&gt; = -                | to avoid empty CP
		&lt;C' head fronted&gt; = none
</rule>
	<showWhen id="swCPOpt1">
		<whenValue element="q" attr="mainCont" value="no" negateValue="yes"/>
	</showWhen>
	<generalizedTemplates>
|Feature templates

Let absolutive          be      &lt;head agr case absolutive&gt;        = +
								&lt;head agr case ergative&gt;  = -
								&lt;head agr case genitive&gt;  = -
Let -absolutive         be      &lt;head agr case absolutive&gt;        = -
								&lt;head agr case ergative&gt;  = +
								&lt;head agr case genitive&gt;  = +
Let accusative          be      &lt;head agr case accusative&gt;        = +
								&lt;head agr case nominative&gt;        = -
								&lt;head agr case genitive&gt;  = -
Let -accusative         be      &lt;head agr case accusative&gt;        = -
								&lt;head agr case nominative&gt;        = +
								&lt;head agr case genitive&gt;  = +
Let AdjP-final          be      &lt;head type AdjP-final&gt;            = +
								&lt;head type AdjP-initial&gt;  = -
Let AdjP-initial        be      &lt;head type AdjP-initial&gt;  = +
								&lt;head type AdjP-final&gt;            = -
Let AdvP-final          be      &lt;head type AdvP-final&gt;            = +
								&lt;head type AdvP-initial&gt;  = -
Let AdvP-initial        be      &lt;head type AdvP-initial&gt;  = +
								&lt;head type AdvP-final&gt;            = -
Let animate             be      &lt;head agr animate&gt;                = +
Let animate_object      be      &lt;head object head agr animate&gt;    = +
Let animate_subject     be      &lt;head subject head agr animate&gt;   = +
Let -animate            be      &lt;head agr animate&gt;                = -
Let -animate_object     be      &lt;head object head agr animate&gt;    = -
Let -animate_subject    be      &lt;head subject head agr animate&gt;   = -
Let class_##            be      &lt;head agr class&gt;          = ##
		| generate the above entry for ## = 1-99 as needed
Let class_##_object     be      &lt;head object agr class&gt;           = ##
		| generate the above entry for ## = 1-99 as needed
Let class_##_subject    be      &lt;head subject agr class&gt;  = ##
		| generate the above entry for ## = 1-99 as needed
Let completive          be      &lt;head infl aspect completive&gt;     = +
Let continuative        be      &lt;head infl aspect continuative&gt;   = +
Let copular             be      &lt;head type copular&gt;               = +
								&lt;head type transitive&gt;            = -
Let CP-final            be      &lt;head type CP-final&gt;              = +
Let CP-initial          be      &lt;head type CP-initial&gt;            = +
Let CP-specifier-initial be     &lt;head type CP-specifier-initial&gt; = +
Let declarative         be      &lt;head infl mood declarative&gt;      = +
Let ditransitive        be      &lt;head type ditransitive&gt;  = +
								&lt;head type transitive&gt;          = +
Let DP-final            be      &lt;head type DP-final&gt;              = +
								&lt;head type DP-initial&gt;            = -
Let DP-initial          be      &lt;head type DP-initial&gt;            = +
								&lt;head type DP-final&gt;              = -
Let dual                be      &lt;head agr number dual&gt;            = +
								&lt;head agr number singular&gt;        = -
								&lt;head agr number plural&gt;  = -
Let dual_object         be      &lt;head object head agr number dual&gt; = +
Let dual_subject        be      &lt;head subject head agr number dual&gt; = +
Let ergative            be      &lt;head agr case ergative&gt;  = +
								&lt;head agr case absolutive&gt;        = -
								&lt;head agr case genitive&gt;  = -
Let -ergative           be      &lt;head agr case ergative&gt;  = -
								&lt;head agr case absolutive&gt;        = +
								&lt;head agr case genitive&gt;  = +
Let exclusive           be      &lt;head agr person second&gt;  = -
Let feminine            be      &lt;head agr gender feminine&gt;        = +
Let feminine_object     be      &lt;head object head agr gender feminine&gt; = +
Let feminine_subject    be      &lt;head subject head agr gender feminine&gt; = +
Let first               be      &lt;head agr person first&gt;           = +
								&lt;head agr person second&gt;  = !-
								&lt;head agr person third&gt;           = -
Let first_exclusive_subject be  &lt;head subject head agr person first&gt; = +
								&lt;head subject head agr person second&gt; = -
Let first_exclusive_object  be  &lt;head object head agr person first&gt; = +
								&lt;head object head agr person second&gt; = -
Let first_inclusive_subject be  &lt;head subject head agr person first&gt; = +
								&lt;head subject head agr person second&gt; = +
Let first_inclusive_object be   &lt;head object head agr person first&gt; = +
								&lt;head object head agr person second&gt; = +
Let first_object        be      &lt;head object head agr person first&gt;  = +
Let first_subject       be      &lt;head subject head agr person first&gt; = +
Let future              be      &lt;head infl tense future&gt;  = +
Let genitive            be      &lt;head agr case genitive&gt;  = +
Let -genitive           be      &lt;head agr case genitive&gt;  = -
Let habitual            be      &lt;head infl aspect habitual&gt;       = +
Let imperative          be      &lt;head infl mood imperative&gt;       = +
Let imperfective        be      &lt;head infl aspect perfective&gt;     = -
Let inclusive           be      &lt;head agr person second&gt;  = +
Let incompletive        be      &lt;head infl aspect completive&gt;     = -
Let interrogative       be      &lt;head infl mood interrogative&gt;    = +
Let intransitive        be      &lt;head type transitive&gt;            = -
Let irrealis            be      &lt;head infl mood realis&gt;           = -
Let locative            be      &lt;head type locative&gt;              = +
Let manner              be      &lt;head type manner&gt;                = +
Let masculine           be      &lt;head agr gender masculine&gt;       = +
Let masculine_object    be      &lt;head object head agr gender masculine&gt; = +
Let masculine_subject   be      &lt;head subject head agr gender masculine&gt; = +
Let modifies_Adj        be      &lt;head type modifies_Adj&gt;  = +
Let modifies_Adv        be      &lt;head type modifies_Adv temporal&gt; = +
								&lt;head type modifies_Adv locative&gt; = +
								&lt;head type modifies_Adv manner&gt; = +
								&lt;head type modifies_Adv reason&gt; = +
Let modifies_Adv-reason be      &lt;head type modifies_Adv reason&gt;   = -
								&lt;head type modifies_Adv locative&gt; = +
								&lt;head type modifies_Adv manner&gt; = +
								&lt;head type modifies_Adv temporal&gt; = +
Let modifies_locative   be      &lt;head type modifies_Adv locative&gt; = +
Let modifies_manner     be      &lt;head type modifies_Adv manner&gt;   = +
Let modifies_NP         be      &lt;head type modifies_NP&gt;           = +
Let modifies_PP         be      &lt;head type modifies_PP&gt;           = +
Let modifies_Q          be      &lt;head type modifies_Q&gt;            = +
Let modifies_reason     be      &lt;head type modifies_Adv reason&gt;   = +
Let modifies_temporal   be      &lt;head type modifies_Adv temporal&gt; = +
Let motion              be      &lt;head type motion&gt;                = +
								[intransitive]
Let negative            be      &lt;head type negative&gt;              = +
Let neuter              be      &lt;head agr gender neuter&gt;  = +
Let neuter_object       be      &lt;head object head agr gender neuter&gt; = +
Let neuter_subject      be      &lt;head subject head agr gender neuter&gt; = +
Let nominative          be      &lt;head agr case nominative&gt;        = +
								&lt;head agr case accusative&gt;        = -
								&lt;head agr case genitive&gt;  = -
Let -nominative         be      &lt;head agr case nominative&gt;        = -
								&lt;head agr case accusative&gt;        = +
								&lt;head agr case genitive&gt;  = +
Let partitive           be      &lt;head type partitive&gt;             = +
Let passive             be      &lt;head type passive&gt;               = +
Let past                be      &lt;head infl tense past&gt;            = +
Let perfective          be      &lt;head infl aspect perfective&gt;     = +
Let plural              be      &lt;head agr number plural&gt;  = +
								&lt;head agr number singular&gt;        = -
Let plural_object       be      &lt;head object head agr number plural&gt; = +
Let plural_subject      be      &lt;head subject head agr number plural&gt; = +
Let poss_dual           be      &lt;head possessor agr number dual&gt;     = +
								&lt;head possessor agr number singular&gt; = -
								&lt;head possessor agr number plural&gt;   = -
Let poss_exclusive      be      &lt;head possessor agr person first&gt;  = +
								&lt;head possessor agr person second&gt; = -
								&lt;head possessor agr person third&gt;  = -
Let poss_first          be      [poss_exclusive]
Let poss_inclusive      be      &lt;head possessor agr person first&gt;  = +
								&lt;head possessor agr person second&gt; = +
								&lt;head possessor agr person third&gt;  = -
Let poss_plural         be      &lt;head possessor agr number plural&gt;   = +
								&lt;head possessor agr number singular&gt; = -
Let poss_second         be      &lt;head possessor agr person first&gt;  = -
								&lt;head possessor agr person second&gt; = +
								&lt;head possessor agr person third&gt;  = -
Let poss_singular       be      &lt;head possessor agr number plural&gt;   = -
								&lt;head possessor agr number singular&gt; = +
Let poss_third          be      &lt;head possessor agr person first&gt;  = -
								&lt;head possessor agr person second&gt; = -
								&lt;head possessor agr person third&gt;  = +
Let possessive          be      &lt;head type possessive&gt; = +
Let potential           be      &lt;head infl aspect potential&gt;      = +
Let PP-final            be      &lt;head type QP-final&gt;              = +
								&lt;head type QP-initial&gt;            = -
Let PP-initial          be      &lt;head type QP-initial&gt;            = +
								&lt;head type QP-final&gt;              = -
Let present             be      &lt;head infl tense present&gt; = +
Let progressive         be      &lt;head infl aspect progressive&gt;    = +
Let -question           be      &lt;head type question&gt;              = -
Let QP-final            be      &lt;head type QP-final&gt;              = +
								&lt;head type QP-initial&gt;            = -
Let QP-initial          be      &lt;head type QP-initial&gt;            = +
								&lt;head type QP-final&gt;              = -
Let quantifier          be      &lt;head type quantifier&gt;            = +
Let reason              be      &lt;head type reason&gt;                = +
Let realis              be      &lt;head infl mood realis&gt;           = +
Let reciprocal          be      &lt;head type reciprocal&gt;            = +
Let reflexive           be      &lt;head type reflexive&gt;             = +
Let +root               be      &lt;head type root&gt;          = +
Let -root               be      &lt;head type root&gt;          = -
Let second              be      &lt;head agr person second&gt;  = +
								&lt;head agr person first&gt;           = -
								&lt;head agr person third&gt;           = -
Let second_object       be      &lt;head object head agr person second&gt; = +
Let second_subject      be      &lt;head subject head agr person second&gt; = +
Let sentential          be      &lt;head type sentential&gt;            = +
Let singular            be      &lt;head agr number singular&gt;        = +
								&lt;head agr number plural&gt;  = -
Let singular_object     be      &lt;head object head agr number singular&gt; = +
Let singular_subject    be      &lt;head subject head agr number singular&gt; = +
Let stative             be      &lt;head infl aspect stative&gt;        = +
Let temporal            be      &lt;head type temporal&gt;              = +
Let third               be      &lt;head agr person third&gt;           = +
								&lt;head agr person first&gt;           = -
								&lt;head agr person second&gt;  = -
Let third_object        be      &lt;head object head agr person third&gt; = +
Let third_subject       be      &lt;head subject head agr person third&gt; = +
Let transitive          be      &lt;head type transitive&gt;            = +
Let wh                  be      &lt;head type wh&gt;                    = +
Let -wh                 be      &lt;head type wh&gt;                    = -

</generalizedTemplates>
	<specializedTemplates show="swNomTemplate">
|Category changes and defaults

Let Adj                 be      &lt;cat&gt; = Adj
								&lt;head type ordinal&gt;               = !-
								&lt;head type wh&gt;                    = !-

Let Adv                 be      &lt;cat&gt; = Adv
								&lt;head type wh&gt;                    = !-

Let Art                 be      &lt;cat&gt; = Art
								&lt;head type wh&gt;                    = !-

Let Aux                 be      &lt;cat&gt; = Aux
								&lt;head type passive&gt;               = !-

Let C                   be      &lt;cat&gt; = C
								&lt;head type question&gt;              = !+
								&lt;head type CP-specifier-initial&gt; = !-

Let Deg                 be      &lt;cat&gt; = Deg
								&lt;head type modifies_Adj&gt;  = !-
								&lt;head type modifies_Adv temporal&gt; = !-
								&lt;head type modifies_Adv locative&gt; = !-
								&lt;head type modifies_Adv manner&gt;   = !-
								&lt;head type modifies_Adv reason&gt;   = !-
								&lt;head type modifies_NP&gt;           = !-
								&lt;head type modifies_PP&gt;           = !-
								&lt;head type modifies_Q&gt;            = !-
								&lt;head type quantifier&gt;            = !-
								&lt;head type wh&gt;                    = !-

Let Dem                 be      &lt;cat&gt; = Dem
								&lt;head type wh&gt;                    = !-

Let N                   be      &lt;head agr animate&gt;                = !-
								&lt;head agr person third&gt;           = !+
								&lt;head agr person first&gt;           = !-
								&lt;head agr person second&gt;  = !-
								&lt;head agr number singular&gt;        = !+
								&lt;head agr number plural&gt;  = !-
								&lt;head type wh&gt;                    = -
								&lt;head type reciprocal&gt;            = !-

Let Num                 be      &lt;cat&gt; = Num
								&lt;head type ordinal&gt;               = !-
								&lt;head type wh&gt;                    = !-

Let ordinal             be      &lt;cat&gt; = Adj
								&lt;head type ordinal&gt;               = +

Let P                   be      &lt;cat&gt; = P
								&lt;head type passive&gt;               = !-
								&lt;head type wh&gt;                    = -
								&lt;head type partitive&gt;             = !-

Let Poss                be      &lt;cat&gt; = Poss
								[genitive]

Let Pron                be      &lt;cat&gt; = Pron
								&lt;head type wh&gt;                    = !-
								&lt;head agr animate&gt;                = !+
								&lt;head agr case genitive&gt;  = !-
								&lt;head type reciprocal&gt;            = !-

Let PropN               be      &lt;cat&gt; = N
								&lt;head agr animate&gt;                = !+
								&lt;head agr person third&gt;           = !+
								&lt;head agr person first&gt;           = !-
								&lt;head agr person second&gt;  = !-
								&lt;head agr number singular&gt;        = !+
								&lt;head agr number plural&gt;  = !-
								&lt;head type wh&gt;                    = -

Let Q                   be      &lt;cat&gt; = Q
								&lt;head type wh&gt;                    = !-

Let V                   be      &lt;cat&gt; = V
								&lt;head type passive&gt;               = !-
								&lt;head type sentential&gt;            = !-
								&lt;head type copular&gt;               = !-
								&lt;head type motion&gt;                = !-
								&lt;head type reciprocal&gt;            = !-
</specializedTemplates>
	<showWhen id="swNomTemplate">
		<whenValue element="np" attr="case" value="nom"/>
	</showWhen>
	<specializedTemplates show="swUseWhenTest">
Hi there!
</specializedTemplates>
	<showWhen id="swUseWhenTest">
		<useShowWhen show="swNomTemplate"/>
		<and/>
		<whenValue element="x" attr="y" value="z"/>
	</showWhen>
	<catMapper show="swCMNom">Num</catMapper>
	<showWhen id="swCMNom">
		<whenValue element="qp/cardinalNumberCategory"  value="" negateValue="yes"/>
	</showWhen>
	<catMapper show="swCMNpArt">Art</catMapper>
	<showWhen id="swCMNpArt">
		<whenValue element="np/articleCategory" value="" negateValue="yes"/>
	</showWhen>
</masterGrammar>
