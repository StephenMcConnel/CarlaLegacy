<html>
   <head>
	  <title>Purpose</title>
	  <link rel="stylesheet" href="../styles/PAWSStarterKit.css">
<style>.userData {behavior: url(#default#userdata);}
  </style><script language="jscript">
  // variables used throughout functions below
var div;
var PawsSKAnswers;
var attr;
var elem;
var example;
var strUserDataStore;

  function Initialize()
{
   // Load answers from the UserData store named "PawsSKAnswers"
   // The store is associated with an empty <DIV id="answerDiv">
   div = document.all("answerDiv");
   strUserDataStore = "PawsSKAnswers";
   div.load(strUserDataStore);
   PawsSKAnswers = new ActiveXObject("MicroSoft.XMLDOM");
   PawsSKAnswers.async = false;
   PawsSKAnswers = div.XMLDocument;
example = PawsSKAnswers.selectSingleNode("//leftOffAt");
example.text = "Purpose.htm";

  div.save(strUserDataStore);
}
</script>
   </head>
   <body onload="Initialize()">
<h1>Purpose</h1>
<div class="introduction">

<p>The purpose of this starter kit is to aid the user in
setting up the initial phrase structure rules, lexical
entries, feature templates, and constraints needed for using
the Parser and Writer for Syntax (PAWS) program.  Those
characteristics of the language which are general, usually
about 3/4 of the rules, can be modeled via this starter
kit.  The language-specific rules will need to be added
later using the interface tools to be provided for user support.</p>

<p>Setting up a complete syntactic parser for a language is a
monumental task.  Experimentation was therefore done to determine how
much was necessary to achieve adequate coverage of the language for
the parser to be able to disambiguate AMPLE output within CARLA
Studio.  On the sliding scale between the simplest and most complex,
this parser is about the middle.  Specifically, it is simpler in some
ways and more complex in others than the analysis put forth in
Bickford's (1998) text <i>Tools for Analyzing the World's Languages:
Morphology and Syntax</i> (which is used in many SIL Grammar I
courses).  The major differences are:</p> <ul> <li>Only very limited,
partial subcategorization is used, since this is the point which
requires the most time and complexity in a complete parser.


<li>An articulated phrase structure following X-bar
  theory is used (see Black 1999, included in the Help menu item, for an
  introduction), since flat structures with lots of optionality are much harder
  to properly constrain and require more memory and processing time.


<li>A parser necessarily works on the surface structure, so
the phrase structure rules must model the output of
transformations, not the underlying structure.  This parser
does not include traces or other null elements which would
be necessary in a complete parser (see Black 1997 for an
example; it is included in the Help menu item).</li>
</ul>

<p>This starter kit is designed in sections, working from the smaller
phrases which may be included in other phrases up to the more complex
phrases and clauses. This allows the user to work on one section at a
time, test hypotheses for each type of phrase and at the same time
become familiar with using PC-PATR for disambiguation within CARLA
Studio.  The entire starter kit must be completed before attempting to
parse full sentences or texts, however.  As the name PAWS indicates,
there are two outputs created by the starter kit:</p>
<ul>
<li>All the files needed for using the PC-PATR syntactic
  parser (McConnel 2002, included in the Help menu item), which is the engine for
  PAWS, and

<li>A rough draft syntax write-up file (in XLingPap format; the documentation for XLingPap is included in the Help menu item).</li>
</ul>
</div>
<div align="center">
  <A href="Contents.htm">Return to Contents</A>
</div>
<div class="userData" id="answerDiv"></div>

   </body>
</html>
