//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

//
// This source code was auto-generated by xsd, Version=2.0.50727.42.
//


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
[Serializable()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.ComponentModel.ToolboxItem(true)]
[System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
[System.Xml.Serialization.XmlRootAttribute("AnaTextExamplesXML")]
[System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
public partial class AnaTextExamplesXML : System.Data.DataSet {

	private shoeboxDataTable tableshoebox;

	private tDataTable tablet;

	private wDataTable tablew;

	private System.Data.DataRelation relationshoebox_t;

	private System.Data.DataRelation relationt_w;

	private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;

	[System.Diagnostics.DebuggerNonUserCodeAttribute()]
	public AnaTextExamplesXML() {
		this.BeginInit();
		this.InitClass();
		System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
		base.Tables.CollectionChanged += schemaChangedHandler;
		base.Relations.CollectionChanged += schemaChangedHandler;
		this.EndInit();
	}

	[System.Diagnostics.DebuggerNonUserCodeAttribute()]
	protected AnaTextExamplesXML(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) :
			base(info, context, false) {
		if ((this.IsBinarySerialized(info, context) == true)) {
			this.InitVars(false);
			System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
			this.Tables.CollectionChanged += schemaChangedHandler1;
			this.Relations.CollectionChanged += schemaChangedHandler1;
			return;
		}
		string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
		if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
			System.Data.DataSet ds = new System.Data.DataSet();
			ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
			if ((ds.Tables["shoebox"] != null)) {
				base.Tables.Add(new shoeboxDataTable(ds.Tables["shoebox"]));
			}
			if ((ds.Tables["t"] != null)) {
				base.Tables.Add(new tDataTable(ds.Tables["t"]));
			}
			if ((ds.Tables["w"] != null)) {
				base.Tables.Add(new wDataTable(ds.Tables["w"]));
			}
			this.DataSetName = ds.DataSetName;
			this.Prefix = ds.Prefix;
			this.Namespace = ds.Namespace;
			this.Locale = ds.Locale;
			this.CaseSensitive = ds.CaseSensitive;
			this.EnforceConstraints = ds.EnforceConstraints;
			this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
			this.InitVars();
		}
		else {
			this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
		}
		this.GetSerializationData(info, context);
		System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
		base.Tables.CollectionChanged += schemaChangedHandler;
		this.Relations.CollectionChanged += schemaChangedHandler;
	}

	[System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[System.ComponentModel.Browsable(false)]
	[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
	public shoeboxDataTable shoebox {
		get {
			return this.tableshoebox;
		}
	}

	[System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[System.ComponentModel.Browsable(false)]
	[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
	public tDataTable t {
		get {
			return this.tablet;
		}
	}

	[System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[System.ComponentModel.Browsable(false)]
	[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
	public wDataTable w {
		get {
			return this.tablew;
		}
	}

	[System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[System.ComponentModel.BrowsableAttribute(true)]
	[System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
	public override System.Data.SchemaSerializationMode SchemaSerializationMode {
		get {
			return this._schemaSerializationMode;
		}
		set {
			this._schemaSerializationMode = value;
		}
	}

	[System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
	public new System.Data.DataTableCollection Tables {
		get {
			return base.Tables;
		}
	}

	[System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
	public new System.Data.DataRelationCollection Relations {
		get {
			return base.Relations;
		}
	}

	[System.Diagnostics.DebuggerNonUserCodeAttribute()]
	protected override void InitializeDerivedDataSet() {
		this.BeginInit();
		this.InitClass();
		this.EndInit();
	}

	[System.Diagnostics.DebuggerNonUserCodeAttribute()]
	public override System.Data.DataSet Clone() {
		AnaTextExamplesXML cln = ((AnaTextExamplesXML)(base.Clone()));
		cln.InitVars();
		cln.SchemaSerializationMode = this.SchemaSerializationMode;
		return cln;
	}

	[System.Diagnostics.DebuggerNonUserCodeAttribute()]
	protected override bool ShouldSerializeTables() {
		return false;
	}

	[System.Diagnostics.DebuggerNonUserCodeAttribute()]
	protected override bool ShouldSerializeRelations() {
		return false;
	}

	[System.Diagnostics.DebuggerNonUserCodeAttribute()]
	protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
		if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
			this.Reset();
			System.Data.DataSet ds = new System.Data.DataSet();
			ds.ReadXml(reader);
			if ((ds.Tables["shoebox"] != null)) {
				base.Tables.Add(new shoeboxDataTable(ds.Tables["shoebox"]));
			}
			if ((ds.Tables["t"] != null)) {
				base.Tables.Add(new tDataTable(ds.Tables["t"]));
			}
			if ((ds.Tables["w"] != null)) {
				base.Tables.Add(new wDataTable(ds.Tables["w"]));
			}
			this.DataSetName = ds.DataSetName;
			this.Prefix = ds.Prefix;
			this.Namespace = ds.Namespace;
			this.Locale = ds.Locale;
			this.CaseSensitive = ds.CaseSensitive;
			this.EnforceConstraints = ds.EnforceConstraints;
			this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
			this.InitVars();
		}
		else {
			this.ReadXml(reader);
			this.InitVars();
		}
	}

	[System.Diagnostics.DebuggerNonUserCodeAttribute()]
	protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
		System.IO.MemoryStream stream = new System.IO.MemoryStream();
		this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
		stream.Position = 0;
		return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
	}

	[System.Diagnostics.DebuggerNonUserCodeAttribute()]
	internal void InitVars() {
		this.InitVars(true);
	}

	[System.Diagnostics.DebuggerNonUserCodeAttribute()]
	internal void InitVars(bool initTable) {
		this.tableshoebox = ((shoeboxDataTable)(base.Tables["shoebox"]));
		if ((initTable == true)) {
			if ((this.tableshoebox != null)) {
				this.tableshoebox.InitVars();
			}
		}
		this.tablet = ((tDataTable)(base.Tables["t"]));
		if ((initTable == true)) {
			if ((this.tablet != null)) {
				this.tablet.InitVars();
			}
		}
		this.tablew = ((wDataTable)(base.Tables["w"]));
		if ((initTable == true)) {
			if ((this.tablew != null)) {
				this.tablew.InitVars();
			}
		}
		this.relationshoebox_t = this.Relations["shoebox_t"];
		this.relationt_w = this.Relations["t_w"];
	}

	[System.Diagnostics.DebuggerNonUserCodeAttribute()]
	private void InitClass() {
		this.DataSetName = "AnaTextExamplesXML";
		this.Prefix = "";
		this.Namespace = "http://www.sil.org/computing/schemas/AnaTextExamples.xsd";
		this.Locale = new System.Globalization.CultureInfo("");
		this.EnforceConstraints = true;
		this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
		this.tableshoebox = new shoeboxDataTable();
		base.Tables.Add(this.tableshoebox);
		this.tablet = new tDataTable();
		base.Tables.Add(this.tablet);
		this.tablew = new wDataTable();
		base.Tables.Add(this.tablew);
		System.Data.ForeignKeyConstraint fkc;
		fkc = new System.Data.ForeignKeyConstraint("shoebox_t", new System.Data.DataColumn[] {
					this.tableshoebox.shoebox_IdColumn}, new System.Data.DataColumn[] {
					this.tablet.shoebox_IdColumn});
		this.tablet.Constraints.Add(fkc);
		fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
		fkc.DeleteRule = System.Data.Rule.Cascade;
		fkc.UpdateRule = System.Data.Rule.Cascade;
		fkc = new System.Data.ForeignKeyConstraint("t_w", new System.Data.DataColumn[] {
					this.tablet.t_IdColumn}, new System.Data.DataColumn[] {
					this.tablew.t_IdColumn});
		this.tablew.Constraints.Add(fkc);
		fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
		fkc.DeleteRule = System.Data.Rule.Cascade;
		fkc.UpdateRule = System.Data.Rule.Cascade;
		this.relationshoebox_t = new System.Data.DataRelation("shoebox_t", new System.Data.DataColumn[] {
					this.tableshoebox.shoebox_IdColumn}, new System.Data.DataColumn[] {
					this.tablet.shoebox_IdColumn}, false);
		this.relationshoebox_t.Nested = true;
		this.Relations.Add(this.relationshoebox_t);
		this.relationt_w = new System.Data.DataRelation("t_w", new System.Data.DataColumn[] {
					this.tablet.t_IdColumn}, new System.Data.DataColumn[] {
					this.tablew.t_IdColumn}, false);
		this.relationt_w.Nested = true;
		this.Relations.Add(this.relationt_w);
	}

	[System.Diagnostics.DebuggerNonUserCodeAttribute()]
	private bool ShouldSerializeshoebox() {
		return false;
	}

	[System.Diagnostics.DebuggerNonUserCodeAttribute()]
	private bool ShouldSerializet() {
		return false;
	}

	[System.Diagnostics.DebuggerNonUserCodeAttribute()]
	private bool ShouldSerializew() {
		return false;
	}

	[System.Diagnostics.DebuggerNonUserCodeAttribute()]
	private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
		if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
			this.InitVars();
		}
	}

	[System.Diagnostics.DebuggerNonUserCodeAttribute()]
	public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
		AnaTextExamplesXML ds = new AnaTextExamplesXML();
		System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
		System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
		xs.Add(ds.GetSchemaSerializable());
		System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
		any.Namespace = ds.Namespace;
		sequence.Items.Add(any);
		type.Particle = sequence;
		return type;
	}

	public delegate void shoeboxRowChangeEventHandler(object sender, shoeboxRowChangeEvent e);

	public delegate void tRowChangeEventHandler(object sender, tRowChangeEvent e);

	public delegate void wRowChangeEventHandler(object sender, wRowChangeEvent e);

	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
	[System.Serializable()]
	[System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
	public partial class shoeboxDataTable : System.Data.DataTable, System.Collections.IEnumerable {

		private System.Data.DataColumn columntype;

		private System.Data.DataColumn columnshoebox_Id;

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public shoeboxDataTable() {
			this.TableName = "shoebox";
			this.BeginInit();
			this.InitClass();
			this.EndInit();
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		internal shoeboxDataTable(System.Data.DataTable table) {
			this.TableName = table.TableName;
			if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
				this.CaseSensitive = table.CaseSensitive;
			}
			if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
				this.Locale = table.Locale;
			}
			if ((table.Namespace != table.DataSet.Namespace)) {
				this.Namespace = table.Namespace;
			}
			this.Prefix = table.Prefix;
			this.MinimumCapacity = table.MinimumCapacity;
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected shoeboxDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) :
				base(info, context) {
			this.InitVars();
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public System.Data.DataColumn typeColumn {
			get {
				return this.columntype;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public System.Data.DataColumn shoebox_IdColumn {
			get {
				return this.columnshoebox_Id;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[System.ComponentModel.Browsable(false)]
		public int Count {
			get {
				return this.Rows.Count;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public shoeboxRow this[int index] {
			get {
				return ((shoeboxRow)(this.Rows[index]));
			}
		}

		public event shoeboxRowChangeEventHandler shoeboxRowChanging;

		public event shoeboxRowChangeEventHandler shoeboxRowChanged;

		public event shoeboxRowChangeEventHandler shoeboxRowDeleting;

		public event shoeboxRowChangeEventHandler shoeboxRowDeleted;

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public void AddshoeboxRow(shoeboxRow row) {
			this.Rows.Add(row);
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public shoeboxRow AddshoeboxRow(string type) {
			shoeboxRow rowshoeboxRow = ((shoeboxRow)(this.NewRow()));
			rowshoeboxRow.ItemArray = new object[] {
					type,
					null};
			this.Rows.Add(rowshoeboxRow);
			return rowshoeboxRow;
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public virtual System.Collections.IEnumerator GetEnumerator() {
			return this.Rows.GetEnumerator();
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public override System.Data.DataTable Clone() {
			shoeboxDataTable cln = ((shoeboxDataTable)(base.Clone()));
			cln.InitVars();
			return cln;
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected override System.Data.DataTable CreateInstance() {
			return new shoeboxDataTable();
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		internal void InitVars() {
			this.columntype = base.Columns["type"];
			this.columnshoebox_Id = base.Columns["shoebox_Id"];
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		private void InitClass() {
			this.columntype = new System.Data.DataColumn("type", typeof(string), null, System.Data.MappingType.Attribute);
			base.Columns.Add(this.columntype);
			this.columnshoebox_Id = new System.Data.DataColumn("shoebox_Id", typeof(int), null, System.Data.MappingType.Hidden);
			base.Columns.Add(this.columnshoebox_Id);
			this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
							this.columnshoebox_Id}, true));
			this.columntype.AllowDBNull = false;
			this.columntype.Namespace = "";
			this.columnshoebox_Id.AutoIncrement = true;
			this.columnshoebox_Id.AllowDBNull = false;
			this.columnshoebox_Id.Unique = true;
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public shoeboxRow NewshoeboxRow() {
			return ((shoeboxRow)(this.NewRow()));
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
			return new shoeboxRow(builder);
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected override System.Type GetRowType() {
			return typeof(shoeboxRow);
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
			base.OnRowChanged(e);
			if ((this.shoeboxRowChanged != null)) {
				this.shoeboxRowChanged(this, new shoeboxRowChangeEvent(((shoeboxRow)(e.Row)), e.Action));
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
			base.OnRowChanging(e);
			if ((this.shoeboxRowChanging != null)) {
				this.shoeboxRowChanging(this, new shoeboxRowChangeEvent(((shoeboxRow)(e.Row)), e.Action));
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
			base.OnRowDeleted(e);
			if ((this.shoeboxRowDeleted != null)) {
				this.shoeboxRowDeleted(this, new shoeboxRowChangeEvent(((shoeboxRow)(e.Row)), e.Action));
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
			base.OnRowDeleting(e);
			if ((this.shoeboxRowDeleting != null)) {
				this.shoeboxRowDeleting(this, new shoeboxRowChangeEvent(((shoeboxRow)(e.Row)), e.Action));
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public void RemoveshoeboxRow(shoeboxRow row) {
			this.Rows.Remove(row);
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
			System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
			System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
			AnaTextExamplesXML ds = new AnaTextExamplesXML();
			xs.Add(ds.GetSchemaSerializable());
			System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
			any1.Namespace = "http://www.w3.org/2001/XMLSchema";
			any1.MinOccurs = new decimal(0);
			any1.MaxOccurs = decimal.MaxValue;
			any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
			sequence.Items.Add(any1);
			System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
			any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
			any2.MinOccurs = new decimal(1);
			any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
			sequence.Items.Add(any2);
			System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
			attribute1.Name = "namespace";
			attribute1.FixedValue = ds.Namespace;
			type.Attributes.Add(attribute1);
			System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
			attribute2.Name = "tableTypeName";
			attribute2.FixedValue = "shoeboxDataTable";
			type.Attributes.Add(attribute2);
			type.Particle = sequence;
			return type;
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
	[System.Serializable()]
	[System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
	public partial class tDataTable : System.Data.DataTable, System.Collections.IEnumerable {

		private System.Data.DataColumn columnvalue;

		private System.Data.DataColumn columnt_Id;

		private System.Data.DataColumn columnshoebox_Id;

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public tDataTable() {
			this.TableName = "t";
			this.BeginInit();
			this.InitClass();
			this.EndInit();
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		internal tDataTable(System.Data.DataTable table) {
			this.TableName = table.TableName;
			if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
				this.CaseSensitive = table.CaseSensitive;
			}
			if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
				this.Locale = table.Locale;
			}
			if ((table.Namespace != table.DataSet.Namespace)) {
				this.Namespace = table.Namespace;
			}
			this.Prefix = table.Prefix;
			this.MinimumCapacity = table.MinimumCapacity;
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected tDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) :
				base(info, context) {
			this.InitVars();
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public System.Data.DataColumn valueColumn {
			get {
				return this.columnvalue;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public System.Data.DataColumn t_IdColumn {
			get {
				return this.columnt_Id;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public System.Data.DataColumn shoebox_IdColumn {
			get {
				return this.columnshoebox_Id;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[System.ComponentModel.Browsable(false)]
		public int Count {
			get {
				return this.Rows.Count;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public tRow this[int index] {
			get {
				return ((tRow)(this.Rows[index]));
			}
		}

		public event tRowChangeEventHandler tRowChanging;

		public event tRowChangeEventHandler tRowChanged;

		public event tRowChangeEventHandler tRowDeleting;

		public event tRowChangeEventHandler tRowDeleted;

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public void AddtRow(tRow row) {
			this.Rows.Add(row);
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public tRow AddtRow(string value, shoeboxRow parentshoeboxRowByshoebox_t) {
			tRow rowtRow = ((tRow)(this.NewRow()));
			rowtRow.ItemArray = new object[] {
					value,
					null,
					parentshoeboxRowByshoebox_t[1]};
			this.Rows.Add(rowtRow);
			return rowtRow;
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public virtual System.Collections.IEnumerator GetEnumerator() {
			return this.Rows.GetEnumerator();
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public override System.Data.DataTable Clone() {
			tDataTable cln = ((tDataTable)(base.Clone()));
			cln.InitVars();
			return cln;
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected override System.Data.DataTable CreateInstance() {
			return new tDataTable();
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		internal void InitVars() {
			this.columnvalue = base.Columns["value"];
			this.columnt_Id = base.Columns["t_Id"];
			this.columnshoebox_Id = base.Columns["shoebox_Id"];
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		private void InitClass() {
			this.columnvalue = new System.Data.DataColumn("value", typeof(string), null, System.Data.MappingType.Attribute);
			base.Columns.Add(this.columnvalue);
			this.columnt_Id = new System.Data.DataColumn("t_Id", typeof(int), null, System.Data.MappingType.Hidden);
			base.Columns.Add(this.columnt_Id);
			this.columnshoebox_Id = new System.Data.DataColumn("shoebox_Id", typeof(int), null, System.Data.MappingType.Hidden);
			base.Columns.Add(this.columnshoebox_Id);
			this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
							this.columnt_Id}, true));
			this.columnvalue.AllowDBNull = false;
			this.columnvalue.Namespace = "";
			this.columnt_Id.AutoIncrement = true;
			this.columnt_Id.AllowDBNull = false;
			this.columnt_Id.Unique = true;
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public tRow NewtRow() {
			return ((tRow)(this.NewRow()));
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
			return new tRow(builder);
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected override System.Type GetRowType() {
			return typeof(tRow);
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
			base.OnRowChanged(e);
			if ((this.tRowChanged != null)) {
				this.tRowChanged(this, new tRowChangeEvent(((tRow)(e.Row)), e.Action));
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
			base.OnRowChanging(e);
			if ((this.tRowChanging != null)) {
				this.tRowChanging(this, new tRowChangeEvent(((tRow)(e.Row)), e.Action));
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
			base.OnRowDeleted(e);
			if ((this.tRowDeleted != null)) {
				this.tRowDeleted(this, new tRowChangeEvent(((tRow)(e.Row)), e.Action));
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
			base.OnRowDeleting(e);
			if ((this.tRowDeleting != null)) {
				this.tRowDeleting(this, new tRowChangeEvent(((tRow)(e.Row)), e.Action));
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public void RemovetRow(tRow row) {
			this.Rows.Remove(row);
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
			System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
			System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
			AnaTextExamplesXML ds = new AnaTextExamplesXML();
			xs.Add(ds.GetSchemaSerializable());
			System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
			any1.Namespace = "http://www.w3.org/2001/XMLSchema";
			any1.MinOccurs = new decimal(0);
			any1.MaxOccurs = decimal.MaxValue;
			any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
			sequence.Items.Add(any1);
			System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
			any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
			any2.MinOccurs = new decimal(1);
			any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
			sequence.Items.Add(any2);
			System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
			attribute1.Name = "namespace";
			attribute1.FixedValue = ds.Namespace;
			type.Attributes.Add(attribute1);
			System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
			attribute2.Name = "tableTypeName";
			attribute2.FixedValue = "tDataTable";
			type.Attributes.Add(attribute2);
			type.Particle = sequence;
			return type;
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
	[System.Serializable()]
	[System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
	public partial class wDataTable : System.Data.DataTable, System.Collections.IEnumerable {

		private System.Data.DataColumn columnvalue;

		private System.Data.DataColumn columna;

		private System.Data.DataColumn columnd;

		private System.Data.DataColumn columncat;

		private System.Data.DataColumn columnu;

		private System.Data.DataColumn columnp;

		private System.Data.DataColumn columnn;

		private System.Data.DataColumn columnf;

		private System.Data.DataColumn columnt_Id;

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public wDataTable() {
			this.TableName = "w";
			this.BeginInit();
			this.InitClass();
			this.EndInit();
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		internal wDataTable(System.Data.DataTable table) {
			this.TableName = table.TableName;
			if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
				this.CaseSensitive = table.CaseSensitive;
			}
			if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
				this.Locale = table.Locale;
			}
			if ((table.Namespace != table.DataSet.Namespace)) {
				this.Namespace = table.Namespace;
			}
			this.Prefix = table.Prefix;
			this.MinimumCapacity = table.MinimumCapacity;
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected wDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) :
				base(info, context) {
			this.InitVars();
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public System.Data.DataColumn valueColumn {
			get {
				return this.columnvalue;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public System.Data.DataColumn aColumn {
			get {
				return this.columna;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public System.Data.DataColumn dColumn {
			get {
				return this.columnd;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public System.Data.DataColumn catColumn {
			get {
				return this.columncat;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public System.Data.DataColumn uColumn {
			get {
				return this.columnu;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public System.Data.DataColumn pColumn {
			get {
				return this.columnp;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public System.Data.DataColumn nColumn {
			get {
				return this.columnn;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public System.Data.DataColumn fColumn {
			get {
				return this.columnf;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public System.Data.DataColumn t_IdColumn {
			get {
				return this.columnt_Id;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[System.ComponentModel.Browsable(false)]
		public int Count {
			get {
				return this.Rows.Count;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public wRow this[int index] {
			get {
				return ((wRow)(this.Rows[index]));
			}
		}

		public event wRowChangeEventHandler wRowChanging;

		public event wRowChangeEventHandler wRowChanged;

		public event wRowChangeEventHandler wRowDeleting;

		public event wRowChangeEventHandler wRowDeleted;

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public void AddwRow(wRow row) {
			this.Rows.Add(row);
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public wRow AddwRow(string value, string a, string d, string cat, string u, string p, string n, string f, tRow parenttRowByt_w) {
			wRow rowwRow = ((wRow)(this.NewRow()));
			rowwRow.ItemArray = new object[] {
					value,
					a,
					d,
					cat,
					u,
					p,
					n,
					f,
					parenttRowByt_w[1]};
			this.Rows.Add(rowwRow);
			return rowwRow;
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public virtual System.Collections.IEnumerator GetEnumerator() {
			return this.Rows.GetEnumerator();
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public override System.Data.DataTable Clone() {
			wDataTable cln = ((wDataTable)(base.Clone()));
			cln.InitVars();
			return cln;
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected override System.Data.DataTable CreateInstance() {
			return new wDataTable();
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		internal void InitVars() {
			this.columnvalue = base.Columns["value"];
			this.columna = base.Columns["a"];
			this.columnd = base.Columns["d"];
			this.columncat = base.Columns["cat"];
			this.columnu = base.Columns["u"];
			this.columnp = base.Columns["p"];
			this.columnn = base.Columns["n"];
			this.columnf = base.Columns["f"];
			this.columnt_Id = base.Columns["t_Id"];
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		private void InitClass() {
			this.columnvalue = new System.Data.DataColumn("value", typeof(string), null, System.Data.MappingType.Attribute);
			base.Columns.Add(this.columnvalue);
			this.columna = new System.Data.DataColumn("a", typeof(string), null, System.Data.MappingType.Element);
			base.Columns.Add(this.columna);
			this.columnd = new System.Data.DataColumn("d", typeof(string), null, System.Data.MappingType.Element);
			base.Columns.Add(this.columnd);
			this.columncat = new System.Data.DataColumn("cat", typeof(string), null, System.Data.MappingType.Element);
			base.Columns.Add(this.columncat);
			this.columnu = new System.Data.DataColumn("u", typeof(string), null, System.Data.MappingType.Element);
			base.Columns.Add(this.columnu);
			this.columnp = new System.Data.DataColumn("p", typeof(string), null, System.Data.MappingType.Element);
			base.Columns.Add(this.columnp);
			this.columnn = new System.Data.DataColumn("n", typeof(string), null, System.Data.MappingType.Element);
			base.Columns.Add(this.columnn);
			this.columnf = new System.Data.DataColumn("f", typeof(string), null, System.Data.MappingType.Element);
			base.Columns.Add(this.columnf);
			this.columnt_Id = new System.Data.DataColumn("t_Id", typeof(int), null, System.Data.MappingType.Hidden);
			base.Columns.Add(this.columnt_Id);
			this.columnvalue.AllowDBNull = false;
			this.columnvalue.Namespace = "";
			this.columna.AllowDBNull = false;
			this.columnd.AllowDBNull = false;
			this.columncat.AllowDBNull = false;
			this.columnu.AllowDBNull = false;
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public wRow NewwRow() {
			return ((wRow)(this.NewRow()));
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
			return new wRow(builder);
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected override System.Type GetRowType() {
			return typeof(wRow);
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
			base.OnRowChanged(e);
			if ((this.wRowChanged != null)) {
				this.wRowChanged(this, new wRowChangeEvent(((wRow)(e.Row)), e.Action));
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
			base.OnRowChanging(e);
			if ((this.wRowChanging != null)) {
				this.wRowChanging(this, new wRowChangeEvent(((wRow)(e.Row)), e.Action));
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
			base.OnRowDeleted(e);
			if ((this.wRowDeleted != null)) {
				this.wRowDeleted(this, new wRowChangeEvent(((wRow)(e.Row)), e.Action));
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
			base.OnRowDeleting(e);
			if ((this.wRowDeleting != null)) {
				this.wRowDeleting(this, new wRowChangeEvent(((wRow)(e.Row)), e.Action));
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public void RemovewRow(wRow row) {
			this.Rows.Remove(row);
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
			System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
			System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
			AnaTextExamplesXML ds = new AnaTextExamplesXML();
			xs.Add(ds.GetSchemaSerializable());
			System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
			any1.Namespace = "http://www.w3.org/2001/XMLSchema";
			any1.MinOccurs = new decimal(0);
			any1.MaxOccurs = decimal.MaxValue;
			any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
			sequence.Items.Add(any1);
			System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
			any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
			any2.MinOccurs = new decimal(1);
			any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
			sequence.Items.Add(any2);
			System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
			attribute1.Name = "namespace";
			attribute1.FixedValue = ds.Namespace;
			type.Attributes.Add(attribute1);
			System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
			attribute2.Name = "tableTypeName";
			attribute2.FixedValue = "wDataTable";
			type.Attributes.Add(attribute2);
			type.Particle = sequence;
			return type;
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
	public partial class shoeboxRow : System.Data.DataRow {

		private shoeboxDataTable tableshoebox;

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		internal shoeboxRow(System.Data.DataRowBuilder rb) :
				base(rb) {
			this.tableshoebox = ((shoeboxDataTable)(this.Table));
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public string type {
			get {
				return ((string)(this[this.tableshoebox.typeColumn]));
			}
			set {
				this[this.tableshoebox.typeColumn] = value;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public int shoebox_Id {
			get {
				return ((int)(this[this.tableshoebox.shoebox_IdColumn]));
			}
			set {
				this[this.tableshoebox.shoebox_IdColumn] = value;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public tRow[] GettRows() {
			return ((tRow[])(base.GetChildRows(this.Table.ChildRelations["shoebox_t"])));
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
	public partial class tRow : System.Data.DataRow {

		private tDataTable tablet;

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		internal tRow(System.Data.DataRowBuilder rb) :
				base(rb) {
			this.tablet = ((tDataTable)(this.Table));
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public string value {
			get {
				return ((string)(this[this.tablet.valueColumn]));
			}
			set {
				this[this.tablet.valueColumn] = value;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public int t_Id {
			get {
				return ((int)(this[this.tablet.t_IdColumn]));
			}
			set {
				this[this.tablet.t_IdColumn] = value;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public int shoebox_Id {
			get {
				try {
					return ((int)(this[this.tablet.shoebox_IdColumn]));
				}
				catch (System.InvalidCastException e) {
					throw new System.Data.StrongTypingException("The value for column \'shoebox_Id\' in table \'t\' is DBNull.", e);
				}
			}
			set {
				this[this.tablet.shoebox_IdColumn] = value;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public shoeboxRow shoeboxRow {
			get {
				return ((shoeboxRow)(this.GetParentRow(this.Table.ParentRelations["shoebox_t"])));
			}
			set {
				this.SetParentRow(value, this.Table.ParentRelations["shoebox_t"]);
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public bool Isshoebox_IdNull() {
			return this.IsNull(this.tablet.shoebox_IdColumn);
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public void Setshoebox_IdNull() {
			this[this.tablet.shoebox_IdColumn] = System.Convert.DBNull;
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public wRow[] GetwRows() {
			return ((wRow[])(base.GetChildRows(this.Table.ChildRelations["t_w"])));
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
	public partial class wRow : System.Data.DataRow {

		private wDataTable tablew;

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		internal wRow(System.Data.DataRowBuilder rb) :
				base(rb) {
			this.tablew = ((wDataTable)(this.Table));
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public string value {
			get {
				return ((string)(this[this.tablew.valueColumn]));
			}
			set {
				this[this.tablew.valueColumn] = value;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public string a {
			get {
				return ((string)(this[this.tablew.aColumn]));
			}
			set {
				this[this.tablew.aColumn] = value;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public string d {
			get {
				return ((string)(this[this.tablew.dColumn]));
			}
			set {
				this[this.tablew.dColumn] = value;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public string cat {
			get {
				return ((string)(this[this.tablew.catColumn]));
			}
			set {
				this[this.tablew.catColumn] = value;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public string u {
			get {
				return ((string)(this[this.tablew.uColumn]));
			}
			set {
				this[this.tablew.uColumn] = value;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public string p {
			get {
				try {
					return ((string)(this[this.tablew.pColumn]));
				}
				catch (System.InvalidCastException e) {
					throw new System.Data.StrongTypingException("The value for column \'p\' in table \'w\' is DBNull.", e);
				}
			}
			set {
				this[this.tablew.pColumn] = value;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public string n {
			get {
				try {
					return ((string)(this[this.tablew.nColumn]));
				}
				catch (System.InvalidCastException e) {
					throw new System.Data.StrongTypingException("The value for column \'n\' in table \'w\' is DBNull.", e);
				}
			}
			set {
				this[this.tablew.nColumn] = value;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public string f {
			get {
				try {
					return ((string)(this[this.tablew.fColumn]));
				}
				catch (System.InvalidCastException e) {
					throw new System.Data.StrongTypingException("The value for column \'f\' in table \'w\' is DBNull.", e);
				}
			}
			set {
				this[this.tablew.fColumn] = value;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public int t_Id {
			get {
				try {
					return ((int)(this[this.tablew.t_IdColumn]));
				}
				catch (System.InvalidCastException e) {
					throw new System.Data.StrongTypingException("The value for column \'t_Id\' in table \'w\' is DBNull.", e);
				}
			}
			set {
				this[this.tablew.t_IdColumn] = value;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public tRow tRow {
			get {
				return ((tRow)(this.GetParentRow(this.Table.ParentRelations["t_w"])));
			}
			set {
				this.SetParentRow(value, this.Table.ParentRelations["t_w"]);
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public bool IspNull() {
			return this.IsNull(this.tablew.pColumn);
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public void SetpNull() {
			this[this.tablew.pColumn] = System.Convert.DBNull;
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public bool IsnNull() {
			return this.IsNull(this.tablew.nColumn);
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public void SetnNull() {
			this[this.tablew.nColumn] = System.Convert.DBNull;
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public bool IsfNull() {
			return this.IsNull(this.tablew.fColumn);
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public void SetfNull() {
			this[this.tablew.fColumn] = System.Convert.DBNull;
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public bool Ist_IdNull() {
			return this.IsNull(this.tablew.t_IdColumn);
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public void Sett_IdNull() {
			this[this.tablew.t_IdColumn] = System.Convert.DBNull;
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
	public class shoeboxRowChangeEvent : System.EventArgs {

		private shoeboxRow eventRow;

		private System.Data.DataRowAction eventAction;

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public shoeboxRowChangeEvent(shoeboxRow row, System.Data.DataRowAction action) {
			this.eventRow = row;
			this.eventAction = action;
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public shoeboxRow Row {
			get {
				return this.eventRow;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public System.Data.DataRowAction Action {
			get {
				return this.eventAction;
			}
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
	public class tRowChangeEvent : System.EventArgs {

		private tRow eventRow;

		private System.Data.DataRowAction eventAction;

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public tRowChangeEvent(tRow row, System.Data.DataRowAction action) {
			this.eventRow = row;
			this.eventAction = action;
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public tRow Row {
			get {
				return this.eventRow;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public System.Data.DataRowAction Action {
			get {
				return this.eventAction;
			}
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
	public class wRowChangeEvent : System.EventArgs {

		private wRow eventRow;

		private System.Data.DataRowAction eventAction;

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public wRowChangeEvent(wRow row, System.Data.DataRowAction action) {
			this.eventRow = row;
			this.eventAction = action;
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public wRow Row {
			get {
				return this.eventRow;
			}
		}

		[System.Diagnostics.DebuggerNonUserCodeAttribute()]
		public System.Data.DataRowAction Action {
			get {
				return this.eventAction;
			}
		}
	}
}
