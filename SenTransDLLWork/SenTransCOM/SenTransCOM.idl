// SenTransCOM.idl : IDL source for SenTransCOM.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (SenTransCOM.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
	[
		object,
		uuid(FB263D51-4293-11D4-942A-0050BF068CF6),
		dual,
		helpstring("ISenTrans Interface"),
		pointer_default(unique)
	]
	interface ISenTrans : IDispatch
	{
		[propget, id(1), helpstring("property RuleFileName")] HRESULT RuleFileName([out, retval] BSTR *pVal);
		[propput, id(1), helpstring("property RuleFileName")] HRESULT RuleFileName([in] BSTR newVal);
		[propget, id(2), helpstring("property InputFileName")] HRESULT InputFileName([out, retval] BSTR *pVal);
		[propput, id(2), helpstring("property InputFileName")] HRESULT InputFileName([in] BSTR newVal);
		[propget, id(3), helpstring("property OutputFileName")] HRESULT OutputFileName([out, retval] BSTR *pVal);
		[propput, id(3), helpstring("property OutputFileName")] HRESULT OutputFileName([in] BSTR newVal);
		[propget, id(4), helpstring("property LogFileName")] HRESULT LogFileName([out, retval] BSTR *pVal);
		[propput, id(4), helpstring("property LogFileName")] HRESULT LogFileName([in] BSTR newVal);
		[propget, id(5), helpstring("property CommentChar")] HRESULT CommentChar([out, retval] BSTR *pVal);
		[propput, id(5), helpstring("property CommentChar")] HRESULT CommentChar([in] BSTR newVal);
		[propget, id(8), helpstring("property bIgnoreCatField")] HRESULT bIgnoreCatField([out, retval] BOOL *pVal);
		[propput, id(8), helpstring("property bIgnoreCatField")] HRESULT bIgnoreCatField([in] BOOL newVal);
		[propget, id(9), helpstring("property bEchoClassContentsInLogFile")] HRESULT bEchoClassContentsInLogFile([out, retval] BOOL *pVal);
		[propput, id(9), helpstring("property bEchoClassContentsInLogFile")] HRESULT bEchoClassContentsInLogFile([in] BOOL newVal);
		[propget, id(10), helpstring("property bTraceRuleApplication")] HRESULT bTraceRuleApplication([out, retval] BOOL *pVal);
		[propput, id(10), helpstring("property bTraceRuleApplication")] HRESULT bTraceRuleApplication([in] BOOL newVal);
		[id(11), helpstring("method ApplyRulesToFile")] HRESULT ApplyRulesToFile([in] BSTR bstrRules, [in] BSTR bstrInput, [in] BSTR bstrOutput, [in] BSTR bstrLog);
		[propget, id(12), helpstring("property SentenceTerminators")] HRESULT SentenceTerminators([out, retval] BSTR *pVal);
		[propput, id(12), helpstring("property SentenceTerminators")] HRESULT SentenceTerminators([in] BSTR newVal);
		[propget, id(13), helpstring("property BeginningPunctuation")] HRESULT BeginningPunctuation([out, retval] BSTR *pVal);
		[propput, id(13), helpstring("property BeginningPunctuation")] HRESULT BeginningPunctuation([in] BSTR newVal);
		[propget, id(14), helpstring("property OtherPunctuation")] HRESULT OtherPunctuation([out, retval] BSTR *pVal);
		[propput, id(14), helpstring("property OtherPunctuation")] HRESULT OtherPunctuation([in] BSTR newVal);
	};

[
	uuid(FB263D44-4293-11D4-942A-0050BF068CF6),
	version(1.0),
	helpstring("SenTransCOM 1.0 Type Library")
]
library SENTRANSCOMLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	[
		uuid(FB263D52-4293-11D4-942A-0050BF068CF6),
		helpstring("SenTrans Class")
	]
	coclass SenTrans
	{
		[default] interface ISenTrans;
	};
};
